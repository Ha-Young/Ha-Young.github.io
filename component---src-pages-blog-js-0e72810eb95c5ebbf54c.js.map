{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/blog.js"],"names":["Content","NavLink","Link","ResumeLink","GitHubLink","BlogLink","HomeLink","SiteHeader","Header","siteTitle","to","href","defaultProps","GatsbyLink","Footer","Layout","children","query","render","data","site","siteMetadata","title","Date","getFullYear","PostBlock","ArticleDate","MarkerHeader","ReadingTime","IndexPage","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","map","key","id","path","css","date","fields","readingTime","text","excerpt"],"mappings":"6LAKMA,EAAO,2HAMPC,EAAU,YAAOC,OAAP,sBAAH,0YA0BPC,EAAa,YAAOF,EAAP,wBAEbG,EAAa,YAAOH,EAAP,wBAEbI,EAAW,YAAOJ,EAAP,wBAEXK,EAAW,YAAOL,EAAP,sBAAH,yCAIRM,EAAU,qLASVC,EAAS,SAAC,GAAD,EAAGC,UAAH,OACb,YAACF,EAAD,KACE,YAACP,EAAD,KACE,qBACE,YAACM,EAAD,CAAUI,GAAG,KAAb,QACA,YAACL,EAAD,CAAUK,GAAG,SAAb,QACA,YAACP,EAAD,CAAYO,GAAG,0CAAf,UAGA,YAACN,EAAD,CAAYO,KAAK,+BAAjB,cAURH,EAAOI,aAAe,CACpBH,UAAU,IAGGD,QChETR,G,UAAO,0IAOPa,EAAU,wIAOVC,EAAM,iJA2CGC,IAjCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,cAAD,CACEC,MAAK,YASLC,OAAQ,SAACC,GAAD,OACN,8BACE,YAAC,EAAD,CAAQV,UAAWU,EAAKC,KAAKC,aAAaC,QAC1C,YAAC,EAAD,KACE,wBAAON,GACP,YAACF,EAAD,KACE,2BACK,IAAIS,MAAOC,cADhB,oBAIA,YAACX,EAAD,CAAYF,KAAK,4BAAjB,cApBV,W,mQChCIX,EAAO,2HAMPyB,EAAS,qNAYTC,EAAW,+FAKXC,EAAY,gOAWZC,EAAW,+F,+DAwCFC,UAnCG,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKG,MAAM,SACX,YAACtB,EAAD,KACE,8BACCmB,EAAKW,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIV,KAAKU,GACR,IAAIV,QAEnBa,KAAI,gBAAGF,EAAH,EAAGA,KAAH,OACH,YAACT,EAAD,CAAWY,IAAKH,EAAKI,IACnB,YAAC,OAAD,CACE5B,GAAIwB,EAAKC,YAAYI,KACrBC,IAAG,GAKH,YAACb,EAAD,KAAeO,EAAKC,YAAYb,MAAhC,KACA,uBACE,YAACI,EAAD,KAAcQ,EAAKC,YAAYM,MAC/B,YAACb,EAAD,WAAiBM,EAAKQ,OAAOC,YAAYC,OAE3C,qBAAIV,EAAKW,iBAWlB,IAAM5B,EAAK","file":"component---src-pages-blog-js-0e72810eb95c5ebbf54c.js","sourcesContent":["import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Content = styled.div`\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst ResumeLink = styled(NavLink)``\n\nconst GitHubLink = styled(NavLink)``\n\nconst BlogLink = styled(NavLink)``\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  background: transparent;\n  display: flex;\n  align-content: center;\n  justify-content: center;\n\n  font-family: \"Raleway\", cursive;\n`\n\nconst Header = ({ siteTitle }) => (\n  <SiteHeader>\n    <Content>\n      <p>\n        <HomeLink to=\"/\">Home</HomeLink>\n        <BlogLink to=\"/blog\">Blog</BlogLink>\n        <ResumeLink to=\"https://ha-young.github.io/resume_web/\">\n          Resume\n        </ResumeLink>\n        <GitHubLink href=\"https://github.com/Ha-Young\">GitHub</GitHubLink>\n      </p>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    margin-bottom: 0;\n  }\n`\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data) => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            <p>\n              Â© {new Date().getFullYear()}, Built with\n              {` `}\n            </p>\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst PostBlock = styled.div`\n  margin: 1em 0em;\n  padding: 2em;\n  border-radius: 1em;\n  border: 1px solid white;\n  transition: all 0.7s;\n  &:hover {\n    background-color: #f2f0d5;\n    border: 1px dashed black;\n  }\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(244, 243, 232, 0.15),\n    rgba(244, 243, 232, 0.8) 100%,\n    rgba(244, 243, 232, 0.25)\n  );\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <PostBlock key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                </div>\n                <p>{node.excerpt}</p>\n              </Link>\n            </PostBlock>\n          ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}
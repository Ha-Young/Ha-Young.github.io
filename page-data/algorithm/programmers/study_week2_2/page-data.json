{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/study_week2_2","result":{"data":{"markdownRemark":{"html":"<h2>문제 설명</h2>\n<p>XX 회사는 트럭을 이용해 상품을 운반합니다. 트럭은 최대 무게가 한정되어있습니다. 직원은 트럭에 상품을 순서대로 실으며, 상품을 실을 수 없는 트럭은 바로 목적지로 출발합니다. 이때 우리는 모든 상품을 운반하는데 필요한 트럭은 최소 몇 대인지 구하려 합니다.</p>\n<p>예를 들어, 각 상품의 스펙이 다음과 같고, 트럭의 허용 무게가 300, 실어야 할 상품이 [toy, snack, snack]라고 합니다.</p>\n<table>\n<thead>\n<tr>\n<th>상품 이름</th>\n<th>무게</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>toy</td>\n<td>70</td>\n</tr>\n<tr>\n<td>snack</td>\n<td>200</td>\n</tr>\n</tbody>\n</table>\n<p>이 경우 첫째 상품과 둘째 상품은 같은 트럭에 들어가지만, 셋째 상품은 다른 트럭에 넣어야 합니다. 따라서 필요한 트럭 수는 두 대 입니다.</p>\n<table>\n<thead>\n<tr>\n<th>상품</th>\n<th>누적 무게</th>\n<th>새 트럭</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>toy</td>\n<td>70</td>\n<td>불필요</td>\n</tr>\n<tr>\n<td>snack</td>\n<td>270</td>\n<td>불필요</td>\n</tr>\n<tr>\n<td>snack</td>\n<td>200</td>\n<td>필요</td>\n</tr>\n</tbody>\n</table>\n<p>트럭의 허용 무게 max_weight와 상품의 스펙을 담은 배열 specs, 운반할 상품의 이름이 순서대로 들은 배열 names가 주어집니다. 이때, 상품을 순서대로 운반하기 위해 필요한 트럭 수를 리턴하는 함수, soution을 완성하세요.</p>\n<h2>제한 조건</h2>\n<ul>\n<li>max_weight는 1 이상 100,000 이하입니다.</li>\n<li>\n<p>specs의 길이는 1 이상 100,000 이하입니다.</p>\n<ul>\n<li>specs의 원소는 [상품 이름, 상품 무게]를 나타냅니다.</li>\n<li>상품 이름은 길이가 1 이상 10,000 이하인 문자열입니다.</li>\n<li>상품 무게는 1 이상 <code class=\"language-text\">max_weight</code> 이하인 자연수를 나타내는 문자열입니다.</li>\n<li>이름이 같은 상품은 없습니다.</li>\n</ul>\n</li>\n<li>\n<p>names는 길이가 1 이상 10,000 이하인 배열입니다.</p>\n<ul>\n<li>names의 원소는 모두 specs에 있는 상품입니다.</li>\n</ul>\n</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>max_weight</th>\n<th>specs</th>\n<th>names</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>300</td>\n<td>[[toy,70], [snack, 200]]</td>\n<td>[toy, snack, snack]</td>\n<td>2</td>\n</tr>\n<tr>\n<td>200</td>\n<td>[[toy,70], [snack, 200]]</td>\n<td>[toy, snack, toy]</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>입출력 예 #1</p>\n<p>앞서 설명한 예와 같습니다.</p>\n<p>입출력 예 #2</p>\n<p>모든 상품은 각각 다른 트럭에 들어갑니다.\n두 번째 트럭을 호출하면 첫 번째 트럭은 목적지로 출발하므로, 세 번째 상품을 첫 번째 트럭에 넣을 수는 없습니다.</p>\n<h2>나의 풀이</h2>\n<h3>첫번째 풀이</h3>\n<h4>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>max_weight<span class=\"token punctuation\">,</span> specs<span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    sum_weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    spec_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span> spec <span class=\"token keyword\">in</span> specs<span class=\"token punctuation\">:</span>\n        spec_dict<span class=\"token punctuation\">[</span>spec<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>spec<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> names<span class=\"token punctuation\">:</span>\n        sum_weight <span class=\"token operator\">+=</span> spec_dict<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> sum_weight <span class=\"token operator\">></span> max_weight<span class=\"token punctuation\">:</span>\n            sum_weight <span class=\"token operator\">=</span> spec_dict<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">if</span> sum_weight <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>설명</h4>\n<ul>\n<li>해당 문제는 hash 즉, python의 dictionary를 이용하면 쉽게 풀 수 있다.</li>\n<li>각 상품의 가격을 바로 찾을 수 있게 하는 것이 핵심 아이디어.</li>\n<li>names를 순회하면서 용량이 초과하면 개수를 더하는 방식이다.</li>\n</ul>\n<h4>결과</h4>\n<p>통과</p>\n<h4>리뷰</h4>\n<blockquote>\n<ul>\n<li><code class=\"language-text\">spec_dict = dict(specs)</code>로 줄일 수 있습니다. :)\n단 <code class=\"language-text\">int</code>로 변환되지는 않습니다.</li>\n<li>무조건 1대는 있기 때문에 최초에 <code class=\"language-text\">answer = 1</code>로 초기화하면 후처리가 없어도 괜찮습니다. :)</li>\n</ul>\n</blockquote>\n<h3>두번째 풀이</h3>\n<h4>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>max_weight<span class=\"token punctuation\">,</span> specs<span class=\"token punctuation\">,</span> names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    specs <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span>specs<span class=\"token punctuation\">)</span>\n    sum_weight <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">for</span> name <span class=\"token keyword\">in</span> names<span class=\"token punctuation\">:</span>\n        weight <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>specs<span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        sum_weight <span class=\"token operator\">+=</span> weight\n        <span class=\"token keyword\">if</span> sum_weight <span class=\"token operator\">></span> max_weight<span class=\"token punctuation\">:</span>\n            sum_weight <span class=\"token operator\">=</span> weight\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>설명</h4>\n<ul>\n<li>리뷰 반영</li>\n<li>코드량이 줄었다.</li>\n</ul>\n<h4>결과</h4>\n<p>통과</p>","excerpt":"문제 설명 XX…","frontmatter":{"date":"14 September, 2020","path":"/algorithm/programmers/study_week2_2","title":"[2주차 Stack & Hash] 운송트럭 - Lv1"},"fields":{"readingTime":{"text":"3 min read"}}}},"pageContext":{"slug":"/programmers_algorithm_python/2020-09-14-[2주차-Stack-&-Hash]-운송트럭/","previous":{"frontmatter":{"path":"/algorithm/programmers/study_week2_1","draft":false,"category":"algorithm"},"fields":{"slug":"/programmers_algorithm_python/2020-09-14-[2주차-Stack-&-Hash]-나머지한점/"}},"next":{"frontmatter":{"path":"/algorithm/programmers/study_week2_3","draft":false,"category":"algorithm"},"fields":{"slug":"/programmers_algorithm_python/2020-09-14-[2주차-Stack-&-Hash]-빙고/"}}}},"staticQueryHashes":["3649515864","63159454"]}
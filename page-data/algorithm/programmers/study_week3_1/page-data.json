{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/study_week3_1","result":{"data":{"markdownRemark":{"html":"<h2>문제 설명</h2>\n<p>어떤 수를 서로 다른 소수 3개의 합으로 표현하는 경우의 수를 구하려 합니다. 예를 들어 33은 총 4가지 방법으로 표현할 수 있습니다.</p>\n<ul>\n<li>3+7+23</li>\n<li>3+11+19</li>\n<li>3+13+17</li>\n<li>5+11+17</li>\n</ul>\n<p>자연수 n이 매개변수로 주어질 때, n을 서로 다른 소수 3개의 합으로 표현하는 경우의 수를 return 하는 solution 함수를 작성해주세요.</p>\n<h2>제한 조건</h2>\n<ul>\n<li>n은 1,000 이하인 자연수입니다.</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>33</td>\n<td>4</td>\n</tr>\n<tr>\n<td>9</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>예시 #1\n문제에 나온 예와 같습니다.</p>\n<p>예시 #2\n9는 서로 다른 세 소수의 합으로 나타낼 수 없습니다.</p>\n<h2>나의풀이</h2>\n<h3>첫번째 풀이</h3>\n<h4>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">get_prime_list</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    num_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> n\n\n    m <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">**</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> m <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> num_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>i<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                num_list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> num_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    prime_list <span class=\"token operator\">=</span> get_prime_list<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\n    prime_num <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>prime_list<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>prime_num<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> prime_num<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> prime_num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> prime_list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prime_list<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> prime_list<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> n<span class=\"token punctuation\">:</span>\n                    answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>설명</h4>\n<ul>\n<li>소수를 구하는 공식인, 에라토스테네스의 체를 사용.</li>\n<li>주어진 n에 대하여 소수 리스트를 구한다.</li>\n<li>해당 리스트에서 나올 수 있는 경우의 수를 모두 구한 후 결과값이 n과 같으면 정답 1씩 더해주는 방식.</li>\n<li>에라토스테네스의 체는 외워두자.</li>\n<li>조합을 직접 구하였는데 itertools의 combinations를 사용하자.</li>\n</ul>\n<h4>결과</h4>\n<p>통과</p>\n<h4>리뷰</h4>\n<blockquote>\n<ul>\n<li>오퍼레이터 사이는 띄워쓰는 것이 좋습니다. (m = int(n ** 0.5))</li>\n<li>\n<p>조합을 <code class=\"language-text\">combinations</code> 함수를 통해 쉽게 구할 수 있습니다. :)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">from itertools import combinations\n...\nanswer = [sum(i) for i in list(combinations(prime_list, 3))].count(n)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n</blockquote>","excerpt":"문제 설명 어떤 수를 서로 다른 소수 3개의 합으로 표현하는 경우의 수를 구하려 합니다. 예를 들어 33은 총 4가지 방법으로 표현할 수 있습니다. 3+7+23 3+11+19 3+13+17 5+11+17 자연수 n이 매개변수로 주어질 때, n을 서로 다른 소수…","frontmatter":{"date":"21 September, 2020","path":"/algorithm/programmers/study_week3_1","title":"[3주차 Searching] 세 소수의 합"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/study_week2_1","result":{"data":{"markdownRemark":{"html":"<h2>문제 설명</h2>\n<p>직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다. 점 3개의 좌표가 들어있는 배열 v가 매개변수로 주어질 때, 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 solution 함수를 완성해주세요. 단, 직사각형의 각 변은 x축, y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.</p>\n<h2>제한사항</h2>\n<ul>\n<li>v는 세 점의 좌표가 들어있는 2차원 배열입니다.</li>\n<li>v의 각 원소는 점의 좌표를 나타내며, 좌표는 [x축 좌표, y축 좌표] 순으로 주어집니다.</li>\n<li>좌표값은 1 이상 10억 이하의 자연수입니다.</li>\n<li>직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 [x축 좌표, y축 좌표] 순으로 담아 return 해주세요.</li>\n</ul>\n<hr>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>v</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[1, 4], [3, 4], [3, 10]]</td>\n<td>[1, 10]</td>\n</tr>\n<tr>\n<td>[[1, 1], [2, 2], [1, 2]]</td>\n<td>[2, 1]</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>입출력 예 #1\n세 점이 [1, 4], [3, 4], [3, 10] 위치에 있을 때, [1, 10]에 점이 위치하면 직사각형이 됩니다.</p>\n<p>입출력 예 #2\n세 점이 [1, 1], [2, 2], [1, 2] 위치에 있을 때, [2, 1]에 점이 위치하면 직사각형이 됩니다.</p>\n<h2>나의 풀이</h2>\n<h3>첫번째 풀이</h3>\n<h4>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    left_xpos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    left_ypos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token comment\"># Toggle 형식으로 홀수 개수인 점을 찾는다.</span>\n    <span class=\"token keyword\">for</span> xpos<span class=\"token punctuation\">,</span> ypos <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> xpos <span class=\"token keyword\">in</span> left_xpos<span class=\"token punctuation\">:</span>\n            left_xpos<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>xpos<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            left_xpos<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>xpos<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">if</span> ypos <span class=\"token keyword\">in</span> left_ypos<span class=\"token punctuation\">:</span>\n            left_ypos<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>ypos<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            left_ypos<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ypos<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> left_xpos <span class=\"token operator\">+</span> left_ypos</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>설명</h4>\n<ul>\n<li>hash나 stack을 이용하지않고 리스트로 풀었습니다.</li>\n<li>직사각형이 되려면 각 위치좌표가 각각 2번씩 나와야 된다는 점을 이용하였습니다.</li>\n</ul>\n<h4>결과</h4>\n<p>통과</p>\n<h4>리뷰</h4>\n<blockquote>\n<p>사실 입력 값이 너무 작아서 큰 차이는 없습니다. :)\n하지만 파이썬의 <code class=\"language-text\">Counter</code>를 이용해서 풀면 좀 더 깔끔하게 풀 수 있습니다.\n한 번 도전해보세요!</p>\n</blockquote>\n<h3>두번째 풀이</h3>\n<h4>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter \n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> _ <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">]</span>\n    y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>y <span class=\"token keyword\">for</span> _<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> v<span class=\"token punctuation\">]</span>\n\n    answer <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>key <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> Counter<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> value <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    answer <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>key <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> value <span class=\"token keyword\">in</span> Counter<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> value <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">return</span> answer </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>설명</h4>\n<ul>\n<li>앞서 풀었던 아이디어를 기반으로  Counter로 풀어보았다.</li>\n<li>훨씬 깔끔하고 pythonic하다.</li>\n</ul>\n<h4>결과</h4>\n<p>통과</p>","excerpt":"문제 설명 직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다. 점 3개의 좌표가 들어있는 배열 v가 매개변수로 주어질 때, 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 solution…","frontmatter":{"date":"14 September, 2020","path":"/algorithm/programmers/study_week2_1","title":"[2주차 Stack & Hash] 나머지 한 점 - Lv1"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"slug":"/programmers_algorithm_python/2020-09-14-[2주차-Stack-&-Hash]-나머지한점/","previous":{"frontmatter":{"path":"/algorithm/programmers/study_week1_5","draft":false,"category":"algorithm"},"fields":{"slug":"/programmers_algorithm_python/2020-09-14-[1주차-Queue-&-Heap]-게임-아이템/"}},"next":{"frontmatter":{"path":"/algorithm/programmers/study_week2_2","draft":false,"category":"algorithm"},"fields":{"slug":"/programmers_algorithm_python/2020-09-14-[2주차-Stack-&-Hash]-운송트럭/"}}}},"staticQueryHashes":["3649515864","63159454"]}
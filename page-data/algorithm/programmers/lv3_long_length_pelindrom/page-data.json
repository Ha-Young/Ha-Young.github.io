{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/lv3_long_length_pelindrom","result":{"data":{"markdownRemark":{"html":"<h2>문제 설명</h2>\n<p>※ 주의</p>\n<p>본 문제는 일부러 시간복잡도가 오래 걸려도 정답이 나오도록 제한 시간이 넉넉하게 설정되어 있습니다.\n본 문제를 정말 빠른 알고리즘으로 풀려면 구글에서 longest palindrom subsequence로 검색을 해보세요.</p>\n<hr>\n<p>앞뒤를 뒤집어도 똑같은 문자열을 팰린드롬(palindrome)이라고 합니다.\n문자열 s가 주어질 때, s의 부분문자열(Substring)중 가장 긴 팰린드롬의 길이를 return 하는 solution 함수를 완성해 주세요.</p>\n<p>예를들면, 문자열 s가 abcdcba이면 7을 return하고 abacde이면 3을 return합니다.</p>\n<h5>제한사항</h5>\n<ul>\n<li>문자열 s의 길이 : 2500 이하의 자연수</li>\n<li>문자열 s는 알파벳 소문자로만 구성</li>\n</ul>\n<hr>\n<h5>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>s</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>abcdcba</td>\n<td>7</td>\n</tr>\n<tr>\n<td>abacde</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>입출력 예 #1\n4번째자리 'd'를 기준으로 문자열 s 전체가 팰린드롬이 되므로 7을 return합니다.</p>\n<p>입출력 예 #2\n2번째자리 'b'를 기준으로 aba가 팰린드롬이 되므로 3을 return합니다.</p>\n<h2>나의 풀이</h2>\n<h3>소스</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">palindrom</span><span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> string <span class=\"token operator\">==</span> string<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">get_substring_combination</span><span class=\"token punctuation\">(</span>origin_string<span class=\"token punctuation\">,</span> hope_length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    result_arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>origin_string<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>hope_length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        sub_string <span class=\"token operator\">=</span> origin_string<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i <span class=\"token operator\">+</span> hope_length<span class=\"token punctuation\">]</span>\n        result_arr<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>sub_string<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> result_arr\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    s_length <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> s_length <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        sub_s <span class=\"token operator\">=</span> get_substring_combination<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> s_length<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">for</span> sub <span class=\"token keyword\">in</span> sub_s<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> palindrom<span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sub<span class=\"token punctuation\">)</span>\n\n        s_length <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>설명</h3>\n<p>가장 큰 단어부터 줄여가는 방식인데,</p>\n<p>팰린드롬인지 체크하면서, 글자 수가 하나 줄은 단어의 조합을 구해간다.</p>\n<p>그래서 팰린드롬이 되면 해당 길이 리턴.</p>\n<p>긴 길이를 구하라고 하였으므로 단어에서부터 하나씩 줄여가는 방식 사용.</p>\n<h2>다른사람의 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">is_palindrome</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>end <span class=\"token operator\">-</span> start<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>start <span class=\"token operator\">+</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>end <span class=\"token operator\">-</span> i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">for</span> answer <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        start <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        end <span class=\"token operator\">=</span> answer <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n        <span class=\"token keyword\">while</span> end <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> \n            <span class=\"token keyword\">if</span> is_palindrome<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span> start<span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> answer\n            start <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            end <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"문제 설명 ※ 주의 본 문제는 일부러 시간복잡도가 오래 걸려도 정답이 나오도록 제한 시간이 넉넉하게 설정되어 있습니다.\n본 문제를 정말 빠른 알고리즘으로 풀려면 구글에서 longest palindrom subsequence…","frontmatter":{"date":"12 October, 2020","path":"/algorithm/programmers/lv3_long_length_pelindrom","title":"프로그래머스 - 가장 긴 팰린드롬 Lv3"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"slug":"/programmers_algorithm_study/2020-10-12-프로그래머스_가장_긴_팰린드롬_Lv3/","previous":{"frontmatter":{"path":"/vanillacoding/prep/week1_op3","draft":false,"category":"vanilla coding"},"fields":{"slug":"/vanillacoding_prep/Prep1주차금요일_오피스아워정리/"}},"next":{"frontmatter":{"path":"/vanillacoding/prep/week2_op1","draft":false,"category":"vanilla coding"},"fields":{"slug":"/vanillacoding_prep/Prep2주차수요일_오피스아워정리/"}}}},"staticQueryHashes":["3649515864","63159454"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/study_week3_6","result":{"data":{"markdownRemark":{"html":"<h2>문제 설명</h2>\n<p><code class=\"language-text\">m</code> 그램(gram)을 담을 수 있는 가방에 사탕을 가득 채우는 경우의 수를 구하려 합니다. 단, 같은 사탕은 또 넣을 수 없습니다.</p>\n<p>가방이 감당할 수 있는 무게 m, 사탕별 무게가 담긴 배열 weights가 매개변수로 주어질 때, 가방을 정확히 m 그램으로 채우는 경우의 수를 return 하는 solution 함수를 작성해주세요.</p>\n<h2>제한 조건</h2>\n<ul>\n<li>m은 1,000 이상 100,000 이하인 자연수입니다.</li>\n<li>모든 사탕의 무게는 10 이상 100,000 이하인 자연수입니다.</li>\n<li>weights의 길이는 3 이상 15 이하입니다.</li>\n</ul>\n<h2>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>m</th>\n<th>weights</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3000</td>\n<td>[500, 1500, 2500, 1000, 2000]</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>사탕을 하나씩 선택해 3000 그램으로 만드는 방법은 [500, 1000, 1500], [1000, 2000], [500, 2500] 으로 3가지입니다.</p>\n<h2>나의 풀이</h2>\n<h3>첫번째 풀이</h3>\n<h4>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> itertools <span class=\"token keyword\">import</span> combinations\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span> weights<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    all_case <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    \n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>weights<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        all_case<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>combinations<span class=\"token punctuation\">(</span>weights<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">for</span> case <span class=\"token keyword\">in</span> all_case<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>case<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> m<span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    \n    <span class=\"token keyword\">return</span> answer</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4>설명</h4>\n<ul>\n<li>\n<ol>\n<li>각 개수별 조합을 구해서 리스트에 담아둔다.</li>\n<li>해당 조합 리스트를 순회하며 각 조합에 대한 가격을 구해 비교하고 맞으면 정답 개수 추가</li>\n</ol>\n</li>\n</ul>\n<h4>결과</h4>\n<p>통과</p>\n<h4>리뷰</h4>\n<blockquote>\n<ul>\n<li>\n<p><code class=\"language-text\">list comprehension</code>과 <code class=\"language-text\">count</code>를 이용할 수 있습니다. :)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">answer = [sum(case) for case in all_case].count(m)</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n</li>\n</ul>\n</blockquote>","excerpt":"문제 설명  그램(gram)을 담을 수 있는 가방에 사탕을 가득 채우는 경우의 수를 구하려 합니다. 단, 같은 사탕은 또 넣을 수 없습니다. 가방이 감당할 수 있는 무게 m, 사탕별 무게가 담긴 배열 weights가 매개변수로 주어질 때, 가방을 정확히 m…","frontmatter":{"date":"21 September, 2020","path":"/algorithm/programmers/study_week3_6","title":"[3주차 Searching] 사탕담기 - Lv2"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"slug":"/programmers_algorithm_python/2020-09-21-[3주차-Searching]-사탕담기---Lv2/","previous":{"frontmatter":{"path":"/algorithm/programmers/study_week3_3","draft":false,"category":"algorithm"},"fields":{"slug":"/programmers_algorithm_python/2020-09-21-[3주차-Searching]-주사위게임---Lv2/"}},"next":{"frontmatter":{"path":"/algorighm/basic/tree-1","draft":false,"category":"algorithm"},"fields":{"slug":"/data-structrue/2020-09-22-자료구조-Tree에-대해-알아보자---1-트리,이진탐색트리/"}}}},"staticQueryHashes":["3649515864","63159454"]}
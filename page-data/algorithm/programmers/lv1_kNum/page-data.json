{"componentChunkName":"component---src-templates-blog-post-js","path":"/algorithm/programmers/lv1_kNum","result":{"data":{"markdownRemark":{"html":"<h2>문제 설명</h2>\n<p>배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.</p>\n<p>예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면</p>\n<ol>\n<li>array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.</li>\n<li>1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.</li>\n<li>2에서 나온 배열의 3번째 숫자는 5입니다.</li>\n</ol>\n<p>배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.</p>\n<h5>제한사항</h5>\n<ul>\n<li>array의 길이는 1 이상 100 이하입니다.</li>\n<li>array의 각 원소는 1 이상 100 이하입니다.</li>\n<li>commands의 길이는 1 이상 50 이하입니다.</li>\n<li>commands의 각 원소는 길이가 3입니다.</li>\n</ul>\n<h5>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>array</th>\n<th>commands</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1, 5, 2, 6, 3, 7, 4]</td>\n<td>[[2, 5, 3], [4, 4, 1], [1, 7, 3]]</td>\n<td>[5, 6, 3]</td>\n</tr>\n</tbody>\n</table>\n<h5>입출력 예 설명</h5>\n<p>[1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다.\n[1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다.\n[1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다.</p>\n<h2>나의 풀이</h2>\n<h3>소스</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array<span class=\"token punctuation\">,</span> commands</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> answer <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> command <span class=\"token keyword\">of</span> commands<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> command<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">const</span> subArr <span class=\"token operator\">=</span> array<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">const</span> sortArr <span class=\"token operator\">=</span> subArr<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">const</span> kNum <span class=\"token operator\">=</span> sortArr<span class=\"token punctuation\">[</span>k<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        \n        answer<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>kNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> answer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>설명</h3>\n<p>그냥 for of 문 돌면서 문제 설명대로 자르고, 소팅하고 값 가져오기.</p>\n<p>처음에 그냥 sort()로만 했어서 문제가 발생했었다.</p>\n<p>숫자 소팅에 무조건 (a,b) => a - b 함수를 넣어야 되나보다...</p>\n<p>그리고 map함수랑 method 체인을 이용하면 코드량을 줄일 수 있을 것 같다.</p>\n<h2>다른사람의 풀이</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">array<span class=\"token punctuation\">,</span> commands</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> commands<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">command</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>sPosition<span class=\"token punctuation\">,</span> ePosition<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> command\n        <span class=\"token keyword\">const</span> newArray <span class=\"token operator\">=</span> array\n            <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> fIndex</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> fIndex <span class=\"token operator\">>=</span> sPosition <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> fIndex <span class=\"token operator\">&lt;=</span> ePosition <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span>b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> a <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span>    \n\n        <span class=\"token keyword\">return</span> newArray<span class=\"token punctuation\">[</span>position <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>굳이 왜 .filter를 썼을까? split이 명확하지 않나...?</p>","excerpt":"문제 설명 배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 1, 5, 2, 6, 3, 7, 4, i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 자르면 5, 2, 6,…","frontmatter":{"date":"08 November, 2020","path":"/algorithm/programmers/lv1_kNum","title":"[JS] 프로그래머스 - K 번째 수 Lv1"},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"slug":"/programmers_algorithm_javascript/2020-11-08-[JS]-프로그래머스---K-번째-수-Lv1/","previous":{"frontmatter":{"path":"/javascript/type","draft":false,"category":"javascript"},"fields":{"slug":"/javascript/하옹의-간단하게-살펴보는-필수-자바스크립트---Type/"}},"next":null}},"staticQueryHashes":["3649515864","63159454"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/vanillacoding/prep/week6_op1","result":{"data":{"markdownRemark":{"html":"<h2>이번주 과제</h2>\n<p>Canola UI는 간단하게 만들어놓은 라이브러리라고 생각하면 된다. </p>\n<p>소스코드가 많지않아서 소스 다 볼 수 있을것.</p>\n<p>Digital Clock을 구현하는 것도 중요하지만,</p>\n<p><strong>Canola UI를 모두 이해해보려고 하는것이 중요</strong></p>\n<p><strong><code class=\"language-text\">this</code>와 <code class=\"language-text\">prototype</code>이 실제 코딩에서 어떻게 쓰일 수 있는지, 어떻게 응용되는지 이해하고 확인할 수 있다.</strong> </p>\n<h2>Q. BAT(Bootcamp Admission TEST)는 어떻게?</h2>\n<p>BAT은 프로그래머스 사이트와 비슷한 플랫폼에서 치뤄진다.</p>\n<p>Prep 수강생에게는 <a href=\"https://www.testdome.com/\">TESTDOME</a>라는 사이트!</p>\n<p>카카오, 네이버 등등의 회사에서도 사용한다고 합니다.</p>\n<p>추가로, 카메라가 필수 (대리 시험자가 있는지 확인)이고 음성녹음은 되지 않습니다.</p>\n<h2>Q. 테스트는 언제까지 봐야되나요?</h2>\n<p>부트캠프 9기 모집기간에 1월 8일까지이므로, 신청서를 1월 8일까지 쓸 수 있다.  하지만 이때면 너무 늦다.</p>\n<p>그래도 12월 말까지는 신청을해야 안전하다.</p>\n<h2>프로토타입</h2>\n<p><strong>자바스크립트 필수, 핵심 개념!!!!</strong></p>\n<p>자바스크립트의 근간이자 핵심이기 때문에 제대로 숙지하고있는지 기술면접등에서 검증할 확률이 높다.</p>\n<p>반드시 숙지 및 이해하고, <strong>말로 설명할 수 있을 정도가 되면 좋을 것 같다.</strong></p>\n<p>설명이 제대로 안되고 이해가 제대로 안되었다면 <u>반복 학습</u>!</p>\n<h2>Q. 함수 중복선언관련 질문</h2>\n<h3>질문</h3>\n<ol>\n<li>함수선언은 중복가능?</li>\n<li>중복된 함수는 같은것인가?</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>답변</h3>\n<ol>\n<li>\n<p>함수는 중복가능하다.</p>\n<ul>\n<li>우리가 변수를 또 선언하면 overriding되듯이 함수선언도 똑같이 overriding 된다.</li>\n</ul>\n</li>\n<li>\n<p>중복된 함수는 같은것인가?</p>\n<ul>\n<li>다르다. 함수는 객체. 객체는 레퍼런스 즉, 참조값을 통해 처리한다. ( 식별자에 참조값이 할당 )\n따라서 함수명 식별자는 그 함수의 참조값이 들어있는 것이고, 중복 선언했다 하더라도 참조값이 다르기때문에 이와 같은 표현식은 false가 나온다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p> 위와같이 참조값을 비교한다는건 우리가 저번에 배웠듯이</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// false</span>\n<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">// false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p> 와 같다고 보면 된다.</p>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">9999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 9999</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>와 같이 같은 식별자로 함수를 중복선언하면 나중에 해당 식별자로 나중에 선언한 함수가 호출되는걸 알 수 있다.</p>\n<h3>추가Q. 함수 이름(식별자)에 참조값을 재할당하는것으로 보면 되는가?</h3>\n<p>그렇게 생각하면 되지만 엄밀히 말하면 아니다. 내부적으로 작동하는것이 다르긴하지만 지금 알 필요는 없다.</p>\n<h2>Q. BAT(Bootcamp Admission TEST) 전에 공부할 것? 어느정도 되야 도전할 수 있을까?</h2>\n<p>일단, <strong>Prep과제를 모두 완수할 정도면 도전 할 수 있다</strong>고 본다.</p>\n<p>그리고 빠르게 보시는 분들은 빠르게 보는 그 시간까지 감안에서 보기때문에 걱정 노노!</p>\n<p>그리고 빨리보면 빨리볼수록 부트캠프 수준에 맞추기 위해 준비할 시간을 주신다고 하시니 얼른보고 부족한 부분 보완하는게 좋을 것 같습니다!</p>\n<h3>* BAT 꿀 TIP</h3>\n<p>시간 : 두 문제에 1시간 부여</p>\n<p>두 문제 다 <strong>Underdash 과제와 비슷</strong>.</p>\n<p>하나는 Underdash 쉬운 메서드와 비슷\n나머지 하나는 Underdash 어려운 메서드와 비슷.</p>\n<blockquote>\n<p> BAT 보기전에 Underdash를 좀 봐두는게 좋을지도...?</p>\n</blockquote>\n<p>근데, Prep 수강생들마다 다른 과제가 나올 수 있다고 합니다.\n난이도는 다 비슷.</p>\n<h2>Q. closed된 MR에 과제 리뷰 반영해서 다시 push시 반영?</h2>\n<p>push해도 Merge Request했던 저장소에 반영된다. (본인 branch)</p>\n<p>저장소에 있는 branch를 본인 branch로 바꾸거나 Closed된 자신의 MR을 클릭하면 추가로 커밋한 것과 수정된걸 확인할 수 있다.</p>\n<h2>ETC</h2>\n<ul>\n<li>이번주 안으로 모든 강의 업로드 예정</li>\n<li>\n<p>BAT 응원해주셔서 감사합니다...!</p>\n<blockquote>\n<p>저는 이유가있어서 호다닥 빨리 보는것이니 괜히 저 때문에 학습에 영향받지마시고 하셨으면 좋겠습니다!  (오지랖이겠지만)\n제가 붙을지는 모르겠지만 화이팅 해서 꼭 부트캠프 같이 들어요!!!</p>\n</blockquote>\n</li>\n<li>\n<p>BAT 드레스코드는 겨울이니 털(후리스)</p>\n<ul>\n<li>녹화가 되니 너무 편한상태로 보지말자. (난닝구까진 가능?)</li>\n<li>마스크는 써도 됩니다.</li>\n</ul>\n</li>\n</ul>","excerpt":"이번주 과제 Canola UI는 간단하게 만들어놓은 라이브러리라고 생각하면 된다.  소스코드가 많지않아서 소스 다 볼 수 있을것. Digital Clock을 구현하는 것도 중요하지만, Canola UI…","frontmatter":{"date":"09 November, 2020","path":"/vanillacoding/prep/week6_op1","title":"Prep 6주차 월요일 오피스아워 정리"},"fields":{"readingTime":{"text":"3 min read"}}}},"pageContext":{"slug":"/vanillacoding_prep/Prep6주차월요일_오피스아워 정리/","previous":{"frontmatter":{"path":"/vanillacoding/bootcamp/apply","draft":false,"category":"vanilla coding"},"fields":{"slug":"/vanillacoding/BootCamp 바닐라코딩 부트캠프 지원/"}},"next":null}},"staticQueryHashes":["3649515864","63159454"]}
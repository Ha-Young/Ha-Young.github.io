{"componentChunkName":"component---src-templates-blog-post-js","path":"/vanillacoding/prep/week3_op1","result":{"data":{"markdownRemark":{"html":"<h2>함수 Naming</h2>\n<p>함수 이름은 동사로 시작하는 것이 일반적.</p>\n<p>국내에만 국한된 것이 아니라 세계적으로 쓰는 컨벤션.</p>\n<p>영어로 이해할 수 있게 잘 네이밍 하는 것이 상당히 중요하다.</p>\n<h2>영어 문서!</h2>\n<p>구글 번역기를 돌리더라도 영어 문서 (공식문서)를 읽고 이해하는 습관을 들여야 된다.\n습관이 들면 들수록 괜찮아 진다.</p>\n<p>일부러 영어라고 한글문서를 찾는 습관은 기르지 않는 것이 좋다.</p>\n<p>레벨이 높아지면 한글문서는 거의 없다.</p>\n<h4>영어공부 꾸준히 하자!</h4>\n<h2>이번에는 let과 const에 대해 잘 써보자</h2>\n<p>이번주 학습내용 이므로 잘 배워서 이번과제에 잘 활용해보자.</p>\n<p>컨벤션은 이번주 금요일 오피스아워에!</p>\n<h2>js로 직접적으로 style변환 비추</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">element<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>backgroundColor <span class=\"token operator\">=</span> <span class=\"token string\">\"white\"</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이렇게 js로 직접적으로 css의 style을 바꾸면 <code class=\"language-text\">inline css</code>로 적용이 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>h1 style<span class=\"token operator\">=</span><span class=\"token string\">\"background-color: white\"</span><span class=\"token operator\">></span>안녕하세요<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이렇게 되면 <strong>inline css의 우선순위가 가장 높아서</strong> 우리가 작성한 css파일의 css의 우선순위가 뒤로 밀려서 제대로 안먹힐 수도 있고,</p>\n<p>css의 파일로 스타일을 관리하는것이 훨씬 유지보수성이 좋다.</p>\n<p>그래서 css파일에 적용시킬 css class를 미리 만들어놓고 add, remove 시켜서 관리하는 것이 훨씬 좋다.</p>\n<h2>파일의 끝에는 항상 한 줄의 공백?</h2>\n<p>저번시간에도 살펴봤던 내용인데,\nGit 때문.</p>\n<p>Git에 올라가는 파일은 무조건  빈 줄 하나를 넣어줘야 되는데,\nGit이 빈 줄을 통해서 파일을 구분 하는 로직이 있다고 함.</p>\n<p>없으면 git에서 No newline at end of file이라는 경고를 보여준다.</p>\n<h2>CSS 작성시의 컨벤션</h2>\n<p>CSS파일 작성에도 유지보수성, 가독성, 일관성을 위해서 컨벤션을 따라야 한다.</p>\n<p>정답은 없지만, 순서나 규칙의 <strong>일관성을 지켜서 가독성을 올리는것이 중요 포인트!</strong></p>\n<p>그리고 규칙이 있어도 빈 줄 없이 쭈욱 쓰는 것이 일반적.</p>\n<h2>html, css, javascript</h2>\n<p>각각의 역활이 있다.\n모든 일을 javascript로 할 수는 있지만, 하지말자.</p>\n<p>역활과 용도를 정확하게 파악해서 개발 할 수 있도록 하자.</p>\n<p>html, css로 해결가능하다면 그렇게 하는 것이 좋음.</p>\n<h2>변수 네이밍</h2>\n<p>변수 네이밍을 할 때 최대한 자세하게!</p>\n<p>변수, 함수 네이밍을 할 때 이름이 긴 것에대해서 절대로 염두하지말자!</p>\n<p><strong>명확하게 나타내주는 것이 좋다.</strong>\n<strong>+ 상대방에 대한 배려!</strong></p>\n<p>근데, 너무 길어지면 40글자? 되면 조금씩 약어...</p>\n<p>근데 이런경우는 거의 없다. </p>\n<p>가독성을 항상 염두하면서 개발하자!</p>\n<blockquote>\n<p>코드의 효율 VS 가독성 </p>\n<p>가독성을 더 우선순위로.</p>\n</blockquote>\n<p>가독성을 위한 코드를 짜는 법은 계속해서 연마하자!</p>\n<h2>DOM에 새로운 커스텀 속성을 만들때?</h2>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vanilla-coding<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">isgood</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    Something\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>다음과 같이 isGood 부분은 원래 html div 태그의 attribute가 아니라 새로 커스텀 해서 만든 속성!</p>\n<p>이렇게 할 수 도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>vanilla-coding<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-isgood</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    Something\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>근데, 커스텀 속성을 부여하고 싶을때에는 위처럼 data- 를 붙인 data attribute를 사용해야 한다.</p>\n<p>data attribute에 대해서는 꼭 찾아보자.</p>\n<h2>Q. if? switch?</h2>\n<p>if 문에서 if else 문이 너무 많아져서 가독성이 좋지 않다면 switch문을 사용하는 것이 가독성을 향상시키는데 좋은 방법이 될 수 있다.</p>\n<blockquote>\n<p>가독성을 위해서 if문과 switch문을 함께 쓸 수 있다.</p>\n</blockquote>\n<p>근데, switch문이 if문보다 복잡해진다면 if문을 쓰는 것이 더 좋지는 않을지 생각해보자.</p>\n<h2>ETC</h2>\n<ul>\n<li>\n<p>과제 모두 열렸음.</p>\n<ul>\n<li>부트캠프 어드미션 테스트를 빨리보고싶으면 먼저 얼른 완료하자.</li>\n</ul>\n</li>\n<li>\n<p>현재 9기 부트캠프 모집중이지만 남은 과제 급하게 하지말자. </p>\n<ul>\n<li>천천히 페이스 조절하면서 이해하면서 과제해도 충분하다고 하십니다!</li>\n</ul>\n</li>\n<li>부트캠프 8기 최종 발표가 있다는데...?</li>\n</ul>","excerpt":"함수 Naming…","frontmatter":{"date":"19 October, 2020","path":"/vanillacoding/prep/week3_op1","title":"Prep 3주차 월요일 오피스아워 정리"},"fields":{"readingTime":{"text":"3 min read"}}}},"pageContext":{"slug":"/vanillacoding_prep/Prep3주차월요일 오피스아워 정리/","previous":{"frontmatter":{"path":"/algorithm/programmers/lv2_tri_snail","draft":false,"category":"algorithm"},"fields":{"slug":"/programmers_algorithm_study/2020-10-16-프로그래머스_삼각_달팽이_Lv2/"}},"next":{"frontmatter":{"path":"/vanillacoding/prep/week2_op3","draft":false,"category":"vanilla coding"},"fields":{"slug":"/vanillacoding_prep/Prep2주차금요일_오피스아워정리/"}}}},"staticQueryHashes":["3649515864","63159454"]}
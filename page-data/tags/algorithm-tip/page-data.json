{"componentChunkName":"component---src-templates-tags-js","path":"/tags/algorithm-tip/","result":{"data":{"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"excerpt":"코드리뷰를 통해 배우는 파이썬 inline if else의 사용\n파이썬에서는  와같은 삼항 연산자 대신에  와 같은 형태로 쓸 수 있다. list의  연산은 O(n)\n파이썬 List는 다양한 연산을 지원하지만 기본적으로 가변 배열 기반이므로  연산이 O(n)의 시간복잡도를 가진다.\n따라서 큐의 형태로 쓰인다면  모듈을 사용하여  연산을 사용하는 편이 O(…","fields":{"slug":"/2020/algorithm/2020-09-28_코드리뷰_파이썬_꿀팁/"},"frontmatter":{"title":"코드리뷰를 통해 배운 파이썬, 파이썬을 활용한 코딩문제 꿀팁!","category":"algorithm","draft":false,"tags":["algorithm","algorithm-tip"]}}},{"node":{"excerpt":"문제 유형 파악하기 코딩 테스트를 볼 때 빠르게 문제 유형을 파악하는 방법을 공유합니다. :) 문제를 읽기전에 무조건 입출력 제한을 보자! 문제를 자세히 읽기전에 입출력 제한을 보는것이 중요합니다. 특히 입력 제한을 보면 어떤 시간복잡도 내에 풀어야 하는지 알 수 있습니다.\n예를들어 입력이 100 이하인 경우 높은 확률로 완전 탐색 문제입니다. 시간복잡도…","fields":{"slug":"/2020/algorithm/2020-09-28_알고리즘_문제풀이_가이드/"},"frontmatter":{"title":"알고리즘 문제풀이 가이드!","category":"algorithm","draft":false,"tags":["algorithm","algorithm-tip"]}}}]}},"pageContext":{"tag":"algorithm-tip"}}}
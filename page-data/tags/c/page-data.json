{"componentChunkName":"component---src-templates-tags-js","path":"/tags/c/","result":{"data":{"allMarkdownRemark":{"totalCount":8,"edges":[{"node":{"excerpt":"객체지향 프로그래밍 현실적인 것, 현실에 존재하는 것을 프로그래밍 하기엔 적합하나,\n현실에 존재하지 않는 것, 추상적인 것을 프로그래밍 구현하기엔 힘들고 부적합한 방식이 될 수 있다. Java VS C++ Java와 C++의 언어단에서 지원하는 객체지향 프로그래밍 기능의 차이를 보자 Java C++ 클래스 클래스 개체 (Object) 개체 (Object)…","fields":{"slug":"/2020/cpp/2020-08-13-C++-객체지향-프로그래밍-1/"},"frontmatter":{"title":"C++ 객체지향 프로그래밍 1","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"파일 입출력 (I/O)시 쓰이는 Lib ifstream : 파일입력 ofstream : 파일 출력 fstream: 파일 입력 및 출력 파일 스트림에 <<, >>, 조정자 등을 쓸 수 있다. C언어와의 비교 C C++ 각 Stream 마다 open() 함수가 있다.\nOpen(“filename”, ios-base::in | ios-base::binary) <…","fields":{"slug":"/2020/cpp/2020-08-11-C++-파일-입출력-(IO)/"},"frontmatter":{"title":"C++ 파일 입출력 (I/O)","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"String 문자열 우리가 c언어나 c++언어에서 문자열을 처리할 때 문제가 되었던 것이 있는데, 이와 같은 상황에서 애러가 발생하는 케이스가 있다. 아무것도 읽지 못했을 때 한줄에 문자가 256자 이상일 때 (즉, 버퍼크기가 충분하지 않을 때) 여기서 대안으로 나온것이 std::string 클래스 이다 그리고 이 string 클래스는 이후 등장하는 언어…","fields":{"slug":"/2020/cpp/2020-08-05-C++-String-문자열/"},"frontmatter":{"title":"C++ String 문자열","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"C++ Reference (참조) 초창기 C에서 C++로 넘어올 때, 추가된 개념인데 C, C++ 개발자 사이에서는 호불호가 많이 갈리는 기능인 것 같다. 어떠한 사람들은 포인터로 다 대체가 되기 때문에 포인터만 쓰는 것이 좋다고 하고 어떠한 사람들은 포인터보다 편하기 때문에 사용하기 좋아하는 것 같다. 우선 Reference 문법은 자바와 비슷하지만 성…","fields":{"slug":"/2020/cpp/2020-08-05-C++-Reference-(참조)/"},"frontmatter":{"title":"C++ Reference (참조)","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"C에서 C++로 오면서 생긴것들 C에서 C++언어로 넘어오면서 생긴 것들 대표적으로 3가지를 꼽아봤다. 아니 사실상은 C언어에서 이것들을 도입함으로써 C++언어가 되었다고 봐도 무방하다. bool 데이터형 참조(Reference) 객체지향 프로그래밍 (object oriented programming) 대표적 3가지로 이것들은 막 C++가 생겼을때의 차이…","fields":{"slug":"/2020/cpp/2020-08-05-C에서-C++로-오면서-생긴것들/"},"frontmatter":{"title":"C에서 C++로 오면서 생긴것들","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"C, C++ 콘솔 입력 간단 비교 C언어 콘솔 입력 C++언어 콘솔 입력 C언어에서의 scanf를 통한 입력은 경계검사를 하지 않기때문에 안전하지 않았다. C++의 cin은 scanf를 어느정도 대체하였는데, 차이는 null 스트링 < - > stream 스트링 의 차이이다. null 스트링 : 마지막 비트가 null. 하나하나 읽으면서 null이면 그만…","fields":{"slug":"/2020/cpp/2020-08-05-C++-콘솔-입력/"},"frontmatter":{"title":"C++ 콘솔 입력","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"C, C++ 콘솔 출력 간단 비교 C언어 콘솔 출력 C++ 언어 콘솔 출력 C++에서의 출력은 C언어에서 %d, %s, %x 등과 같은 규격을 없애는 등 C언어의 불편한점을 해소하려고 했다. stream 개념을 도입하여 흐름을 표현하였다. (<< 연산자 - push operator) C++언어에서 사용 여기서 전처리기 include를 통해 iostream…","fields":{"slug":"/2020/cpp/2020-08-05-C++-콘솔-출력/"},"frontmatter":{"title":"C++ 콘솔 출력","category":"c++","draft":false,"tags":["c++"]}}},{"node":{"excerpt":"들어가기에 앞서… 본 게시글은 2019년 5월 경에 들었던 POCU 아카데미의 C++ 프로그래밍 강의인 POCU3200강의를 복기하면서 적는 강의입니다.\n복기에 대한 자세한 리스트는 여기 에서 확인 할 수 있습니다. C++는 여전히 쓰이는가? 그렇다. C++는 성능이 필요한 곳에서는 여전히 필수이다.\n성능이 필요한 곳에서는 언매니지드 (메모리를 직접 관리…","fields":{"slug":"/2020/cpp/2020-08-05-C++는-여전히-쓰이는가-쓰지-않더라도-왜-배워야-하는가/"},"frontmatter":{"title":"C++는 여전히 쓰이는가? 쓰지 않더라도 왜 배워야 하는가?","category":"c++","draft":false,"tags":["c++"]}}}]}},"pageContext":{"tag":"c++"}}}
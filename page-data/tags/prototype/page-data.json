{"componentChunkName":"component---src-templates-tags-js","path":"/tags/prototype/","result":{"data":{"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"excerpt":"위 코드 대로 실행하면 제일 아랫 줄의 코드는 에러를 던집니다. 하지만 주석 처리된 코드를 해제하고 위에 함수 내부의 동일한 코드를 주석 처리 한 뒤 실행해보면 아랫 줄의 콘솔이 정상적으로 작동합니다.\n그런데 오류가 발생할 때  디렉토리를 보면 와 을 상속받고 있다고 나옵니다.(아래 사진 첨부)\n그래서 왜 오류가 나오는지 궁금했습니다. :thinking_…","fields":{"slug":"/2020/drafts/2020-11-12-javascript-prototype-생성자-함수-내부에-체이닝을-하면-안되는-이유/"},"frontmatter":{"title":"javascript prototype 생성자 함수 내부에 체이닝을 하면 안되는 이유","category":"javascript","draft":true,"tags":["javascript","prototype"]}}},{"node":{"excerpt":"여러분 lexical scope라는 말을 알고계신가용 (알고 계셨다면 죄송합니당…)\n수요일날 오피스아워 정리한것을 읽어보는데 제가 lexical this라는 것을 적어놨더라구용 (arrow function에 있는 this는 lexical this라는 말…)\n막 아는 것처럼 적어놨는데, 사실 몰랐습니당. 그래서 이게 무엇인지 좀 찾아보았는데용\n우선 lexi…","fields":{"slug":"/2020/drafts/2020-11-12-Lexical-Scope-Javascript-Scope/"},"frontmatter":{"title":"Lexical Scope? Javascript Scope","category":"javascript","draft":true,"tags":["javascript","prototype"]}}}]}},"pageContext":{"tag":"prototype"}}}
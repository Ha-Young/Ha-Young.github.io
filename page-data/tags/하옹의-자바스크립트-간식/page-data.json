{"componentChunkName":"component---src-templates-tags-js","path":"/tags/하옹의-자바스크립트-간식/","result":{"data":{"allMarkdownRemark":{"totalCount":2,"edges":[{"node":{"excerpt":"❗️ 객체 불변성 자바스크립트에서 객체 불변성은 특히나 더 중요시되고 있는데, 이 객체불변성(Immutability)은 함수형 프로그래밍의 핵심원리 이다. 따라서 완벽하진않지만 함수형프로그래밍을 할 수 있는 자바스크립트에서 함수형프로그래밍을 하기 위해 사용하고 있으며,\n특히나 리액트와 같은 프레임워크를 사용하게 되면 VirtualDOM의 작동 특성상 객체 …","fields":{"slug":"/2021/javascript/하옹의-자바스크립트-간식---객체-불변성_Immutability/"},"frontmatter":{"title":"하옹의 자바스크립트 간식 - 객체 불변성(Immutability)","category":"javascript","draft":false,"tags":["javascript","불변성","객체 불변성","immutability","하옹의 자바스크립트 간식"]}}},{"node":{"excerpt":"객체 복사란? 객체 지향 프로그래밍에서 객체 복사는 객체의 사본을 생성하는 것이다. 일반적으로 참조값을 가지고 있는 객체에서 단순한 할당작업을 거칠경우, 객체 자체가 복사되는게 아닌 그 참조값이 할당된다. 이는 객체 복사라고 볼 수 없고 동일 객체를 참조하는 변수가 하나 더 늘어났다고 밖에 볼 수 없다. 마지막줄을 보면  와  가 같기 때문에 얼핏봐서는 …","fields":{"slug":"/2021/javascript/하옹의-자바스크립트-간식---Object-Copy/"},"frontmatter":{"title":"하옹의 자바스크립트 간식 - Object Copy (Deep Copy VS Shallow Copy)","category":"javascript","draft":false,"tags":["javascript","deep copy","shallow copy","하옹의 자바스크립트 간식"]}}}]}},"pageContext":{"tag":"하옹의 자바스크립트 간식"}},"staticQueryHashes":["145675779","3128451518"]}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/algorithm/2020-10-11_패캠_알고리즘완주반_6주/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"7c4af599-da71-542c-ad09-2f2596ad50bc","excerpt":"과제1 문제 Max Heap 자료구조를 이용하면 최대값을 의 시간복잡도로 찾을 수 있다. Max Heap을 이용하면 우선순위 값이 낮은 자료를 먼저 출력하는 Priority Queue를 구현할 수 있다. Max Heap을 이용한 Priority Queue는 아래와 같은 특징을 가진다. Max Heap을 이용한 Priority Queue…","html":"<h2 id=\"과제1\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C1\" aria-label=\"과제1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제1</h2>\n<h3 id=\"문제\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C\" aria-label=\"문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h3>\n<p>Max Heap 자료구조를 이용하면 최대값을 <code class=\"language-text\">O(logN)</code>의 시간복잡도로 찾을 수 있다. Max Heap을 이용하면 우선순위 값이 낮은 자료를 먼저 출력하는 Priority Queue를 구현할 수 있다. Max Heap을 이용한 Priority Queue는 아래와 같은 특징을 가진다.</p>\n<ul>\n<li>\n<p>Max Heap을 이용한 Priority Queue의 특징</p>\n<ul>\n<li>자료를 입력하는 동작과 출력하는 동작 모두 <code class=\"language-text\">O(logN)</code>으로 이루어진다.</li>\n<li>우선순위 값이 낮은 자료를 먼저 출력하되, 우선순위 값이 같은 자료끼리는 순서를 고려하지 않는다.</li>\n<li>다음과 같은 Method들을 구현한다.</li>\n<li><code class=\"language-text\">is_empty()</code>: Queue가 비어있으면 True, 비어있지 않으면 False를 출력한다.</li>\n<li><code class=\"language-text\">put()</code>: Priority Queue에 자료를 입력한다. 자료는 길이가 2인 Tuple로, <code class=\"language-text\">(우선순위, 자료)</code> 형태로 입력받는다.</li>\n<li><code class=\"language-text\">get()</code>: Priority Queue에서 자료를 출력한다. 출력한 데이터는 Priority Queue에서 삭제한다. 더이상 출력할 데이터가 없는 경우 None을 출력한다.</li>\n<li><code class=\"language-text\">peek()</code>: Priority Queue에서 자료를 출력한다. 출력한 데이터는 Priority Queue에 그대로 유지한다. 더이상 출력할 데이터가 없는 경우 None을 출력한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PriorityQueue</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">pass</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">is_empty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">pass</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">pass</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">pass</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token function\">peek</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">pass</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"나의-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4\" aria-label=\"나의 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h3>\n<h4 id=\"소스\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4\" aria-label=\"소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PriorityQueue</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>que <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">is_empty</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">move_up</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> inserted_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> inserted_idx <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n        parent_idx <span class=\"token operator\">=</span> inserted_idx <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>inserted_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>parent_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">return</span>\n\n        self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n        inserted_idx <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n        parent_idx <span class=\"token operator\">=</span> inserted_idx <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n\n        <span class=\"token keyword\">if</span> inserted_idx <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span>\n\n        <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>inserted_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>parent_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>inserted_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>parent_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>parent_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>inserted_idx<span class=\"token punctuation\">]</span>\n            inserted_idx <span class=\"token operator\">=</span> parent_idx\n            parent_idx <span class=\"token operator\">=</span> inserted_idx <span class=\"token operator\">//</span> <span class=\"token number\">2</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">move_down</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> popped_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        left_child_popped_idx <span class=\"token operator\">=</span> popped_idx <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n        right_child_popped_idx <span class=\"token operator\">=</span> popped_idx <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n        <span class=\"token comment\"># case1: 왼쪽 자식 노드도 없을 때</span>\n        <span class=\"token keyword\">if</span> left_child_popped_idx <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token comment\"># case2: 오른쪽 자식 노드만 없을 때</span>\n        <span class=\"token keyword\">elif</span> right_child_popped_idx <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n        <span class=\"token comment\"># case3: 왼쪽, 오른쪽 자식 노드 모두 있을 때</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>right_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>right_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n\n        returned_data <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">del</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        popped_idx <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n        <span class=\"token keyword\">while</span> self<span class=\"token punctuation\">.</span>move_down<span class=\"token punctuation\">(</span>popped_idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            left_child_popped_idx <span class=\"token operator\">=</span> popped_idx <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n            right_child_popped_idx <span class=\"token operator\">=</span> popped_idx <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\n            <span class=\"token comment\"># case2: 오른쪽 자식 노드만 없을 때</span>\n            <span class=\"token keyword\">if</span> right_child_popped_idx <span class=\"token operator\">>=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span>\n                    popped_idx <span class=\"token operator\">=</span> left_child_popped_idx\n            <span class=\"token comment\"># case3: 왼쪽, 오른쪽 자식 노드 모두 있을 때</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>right_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                        self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>left_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span>\n                        popped_idx <span class=\"token operator\">=</span> left_child_popped_idx\n                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                    <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>right_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                        self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>right_child_popped_idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>right_child_popped_idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span>popped_idx<span class=\"token punctuation\">]</span>\n                        popped_idx <span class=\"token operator\">=</span> right_child_popped_idx\n\n        <span class=\"token keyword\">return</span> returned_data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">peek</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>is_empty<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span>\n\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>que<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></code></pre></div>\n<h4 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h4>\n<p>그냥 힙 구현에서 배운그대로의 알고리즘을 적용시키면서 다른점이 있다면 값 비교를 self.queue[idx] 끼리만 비교하였다면 우선순위큐로 적용시키면서 self.queue[idx][0] 이렇게 우선순위로 비교하도록 하였다.</p>\n<h2 id=\"과제2\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C2\" aria-label=\"과제2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제2</h2>\n<h3 id=\"문제-1\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-1\" aria-label=\"문제 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h3>\n<p>오름차순으로 정렬된 N개의 정수를 가진 List가 주어져있을 때, 해당 List에 존재하는 서로 다른 값이 몇 가지인지 알아내는 알고리즘을 구현하라. 알고리즘의 제약사항은 아래와 같다. (알고리즘은 <code class=\"language-text\">1 &lt;= N &lt;= 10000</code>에서 테스트된다.)</p>\n<ul>\n<li>추가 메모리 사용은 <code class=\"language-text\">O(1)</code>으로 제한된다. 따라서 set()와 dict() 등의 자료구조를 사용할 수 없다.</li>\n<li>알고리즘의 시간복잡도는 <code class=\"language-text\">O(N)</code> 이하로 제한된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">countUniques</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>countUniques<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 5</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>countUniques<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2</span></code></pre></div>\n<h3 id=\"나의-풀이-1\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-1\" aria-label=\"나의 풀이 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h3>\n<h4 id=\"소스-1\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-1\" aria-label=\"소스 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">countUniques</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    count <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    prev_num <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      cur_num <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> cur_num <span class=\"token operator\">!=</span> prev_num<span class=\"token punctuation\">:</span>\n        prev_num <span class=\"token operator\">=</span> cur_num\n        count <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> count</code></pre></div>\n<h4 id=\"설명-1\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85-1\" aria-label=\"설명 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h4>\n<p>그냥 리스트의 크기 (N)번 만큼 순회하면서 다른값이 나오면 카운팅에 1추가하는 방식이다.</p>\n<h2 id=\"과제3\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C3\" aria-label=\"과제3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제3</h2>\n<h3 id=\"문제-2\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-2\" aria-label=\"문제 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h3>\n<p>N개의 문자열로 이루어진 List에서 전체 문자열이 앞 n개 문자열이 같다고 할때, 가장 큰 n을 출력하는 알고리즘을 구현하라.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'abcd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abce'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abchg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abcfwqw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abcdfg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 3</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'abcd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'gbce'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abchg'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abcfwqw'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abcdfg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 0</span></code></pre></div>\n<h3 id=\"나의-풀이-2\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-2\" aria-label=\"나의 풀이 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h3>\n<h4 id=\"소스-2\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-2\" aria-label=\"소스 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    compare_str <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        next_str <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compare_str<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>next_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            compare_str <span class=\"token operator\">=</span> compare_str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>next_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># compare_str을 하나씩 줄여가면서 비교</span>\n        <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compare_str<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> compare_str <span class=\"token operator\">==</span> next_str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compare_str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                compare_str <span class=\"token operator\">=</span> compare_str<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compare_str<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># 가지치기 (빠른 종료)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compare_str<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>compare_str<span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"설명-2\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85-2\" aria-label=\"설명 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h4>\n<p>앞 n개 문자열이 같은걸 찾으므로 맨 처음 문자열을 비교하고 아니면 맨 뒷글자를 줄여가는 방식으로 구현하였다. 그리고 비교문자열을 저장하면서 틀리면 줄여나가면서 찾는다.</p>\n<h2 id=\"과제4\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C4\" aria-label=\"과제4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제4</h2>\n<h3 id=\"문제-3\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-3\" aria-label=\"문제 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제</h3>\n<p>자연수 중, <strong>각 자리수를 제곱한 것을 더하는 과정을 반복했을 때 1으로 끝나는 수</strong>를 ‘행복한 수’라고 한다. ‘행복한 수’가 아닌 경우 이 과정이 1에 도달하지 못하고 같은 <strong>수열이 반복되는 무한 루프</strong>에 빠지게 된다. 자연수를 입력받았을 때 ‘행복한 수’인지 판별하는 알고리즘을 작성하라.</p>\n<p>‘행복한 수’를 찾는 과정의 예</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  19이 행복한 수인지 확인하는 과정\n  1^2 + 9^2 = 82\n  8^2 + 2^2 = 68\n  6^2 + 8^2 = 100\n  1^2 + 0^2 + 0^2 = 1 --&gt; True</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>solution<span class=\"token punctuation\">(</span><span class=\"token number\">61</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># False</span></code></pre></div>\n<h3 id=\"나의-풀이-3\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-3\" aria-label=\"나의 풀이 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h3>\n<h4 id=\"소스-3\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4-3\" aria-label=\"소스 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n        next_num <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n        <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            next_digit <span class=\"token operator\">=</span> n <span class=\"token operator\">%</span> <span class=\"token number\">10</span>\n            n <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> <span class=\"token number\">10</span>\n\n            next_num <span class=\"token operator\">+=</span> next_digit <span class=\"token operator\">**</span> <span class=\"token number\">2</span>\n\n        <span class=\"token keyword\">return</span> solution<span class=\"token punctuation\">(</span>next_num<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">except</span> RecursionError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></code></pre></div>\n<h4 id=\"설명-3\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85-3\" aria-label=\"설명 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h4>\n<p>재귀함수로 구현하였으며 무한루프(재귀애러)에 빠지면 except로 잡아서 false처리하도록 하였다.</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EA%B3%BC%EC%A0%9C1\">과제1</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%AC%B8%EC%A0%9C\">문제</a></li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4\">나의 풀이</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%86%8C%EC%8A%A4\">소스</a></li>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%84%A4%EB%AA%85\">설명</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EA%B3%BC%EC%A0%9C2\">과제2</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%AC%B8%EC%A0%9C-1\">문제</a></li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-1\">나의 풀이</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%86%8C%EC%8A%A4-1\">소스</a></li>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%84%A4%EB%AA%85-1\">설명</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EA%B3%BC%EC%A0%9C3\">과제3</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%AC%B8%EC%A0%9C-2\">문제</a></li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-2\">나의 풀이</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%86%8C%EC%8A%A4-2\">소스</a></li>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%84%A4%EB%AA%85-2\">설명</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EA%B3%BC%EC%A0%9C4\">과제4</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%AC%B8%EC%A0%9C-3\">문제</a></li>\n<li>\n<p><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4-3\">나의 풀이</a></p>\n<ul>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%86%8C%EC%8A%A4-3\">소스</a></li>\n<li><a href=\"/2020/algorithm/2020-10-11_%ED%8C%A8%EC%BA%A0_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%99%84%EC%A3%BC%EB%B0%98_6%EC%A3%BC/#%EC%84%A4%EB%AA%85-3\">설명</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"패스트캠퍼스 알고리즘 완주반 6주차 과제","date":"October 11, 2020"}}},"pageContext":{"slug":"/2020/algorithm/2020-10-11_패캠_알고리즘완주반_6주/","previous":{"fields":{"slug":"/2020/vanillacoding_prep/Prep 1주차 금요일_오피스아워정리/"},"frontmatter":{"title":"바닐라코딩 Prep 1주차 금요일 오피스아워 정리","category":"vanilla coding","draft":false}},"next":{"fields":{"slug":"/2020/algorithm_python/2020-10-12-프로그래머스_가장_긴_팰린드롬_Lv3/"},"frontmatter":{"title":"프로그래머스 - 가장 긴 팰린드롬 Lv3","category":"algorithm","draft":false}}}},"staticQueryHashes":["1402886152","145675779","3128451518"]}
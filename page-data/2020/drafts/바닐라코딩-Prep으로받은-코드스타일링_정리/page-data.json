{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/drafts/바닐라코딩-Prep으로받은-코드스타일링_정리/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"dee9801e-b5d4-5fb0-85cf-fb70cee459e8","excerpt":"Prep 코드리뷰로 정리하는 코드 스타일링 개발관련 .gitignore에 package-lock.json…","html":"<h2 id=\"prep-코드리뷰로-정리하는-코드-스타일링\" style=\"position:relative;\"><a href=\"#prep-%EC%BD%94%EB%93%9C%EB%A6%AC%EB%B7%B0%EB%A1%9C-%EC%A0%95%EB%A6%AC%ED%95%98%EB%8A%94-%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%83%80%EC%9D%BC%EB%A7%81\" aria-label=\"prep 코드리뷰로 정리하는 코드 스타일링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prep 코드리뷰로 정리하는 코드 스타일링</h2>\n<h3 id=\"개발관련\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EB%B0%9C%EA%B4%80%EB%A0%A8\" aria-label=\"개발관련 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개발관련</h3>\n<h4 id=\"gitignore에-package-lockjson을-넣으면-안된다\" style=\"position:relative;\"><a href=\"#gitignore%EC%97%90-package-lockjson%EC%9D%84-%EB%84%A3%EC%9C%BC%EB%A9%B4-%EC%95%88%EB%90%9C%EB%8B%A4\" aria-label=\"gitignore에 package lockjson을 넣으면 안된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.gitignore에 package-lock.json을 넣으면 안된다.</h4>\n<p>나는 <code class=\"language-text\">package-lock.json</code>이 필요없이, 그냥 <code class=\"language-text\">npm install</code>시에 생기는 부산물이라고 생각해서 <code class=\"language-text\">.gitignore</code>에 <code class=\"language-text\">package-lock.json</code>을 추가했던 적이 있다. 하지만 이 <code class=\"language-text\">package-lock.json</code>은 <code class=\"language-text\">package.json</code>의 부족한 정보를 담고있는 것인데, <code class=\"language-text\">pack.json</code>에 우리가 다운받으면 나오는 버전에 대한 정보는 사실 명확한 버전이 아니라 버전에 대한 <code class=\"language-text\">범위(Caret Range)</code>를 표기하고 있다. 그래서 명확한 버전이 아니기 때문에 명확한 버전에 대한 정보를 담는 것이 바로 <code class=\"language-text\">package-lock.json</code>이고 이 <code class=\"language-text\">package-lock.json</code>이 있다면 <code class=\"language-text\">npm install</code>시에 <code class=\"language-text\">package-lock.json</code>을 통해 <code class=\"language-text\">node-modules</code>폴더를 생성하게 된다. 만약, <code class=\"language-text\">package-lock.json</code>이 없다면 <code class=\"language-text\">package.json</code>을 참고해서 생성되기 때문에 명확하지 않은 정보로 생성이 된다. </p>\n<p>소스를 배포나 공유시에 이 <code class=\"language-text\">package-lock.json</code>이 없다면, 내가 다운받고 개발한 환경과 다르게 <code class=\"language-text\">package.json</code>을 통해 명확하지 않은 모듈들을 받을 수 있으므로 제대로 작동하지 않을 확률이 높다.</p>\n<p>따라서 <strong><code class=\"language-text\">package-lock.json</code>은 소스 코드를 배포 혹은 공유시에 함게 공유</strong>되어야 한다.</p>\n<h4 id=\"newline-추가\" style=\"position:relative;\"><a href=\"#newline-%EC%B6%94%EA%B0%80\" aria-label=\"newline 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>newline 추가</h4>\n<p>git을 이용할때에는 항상 파일의 끝에 <code class=\"language-text\">new line</code>이 추가되어야 한다.</p>\n<p>이는 git에서 <code class=\"language-text\">new line</code>을 통해 파일 구분을 하기 때문.</p>\n<p><strong><code class=\"language-text\">new line</code>이 없다면 git에서 문제가 생길 확률이 높다.</strong></p>\n<h4 id=\"사용하지-않는-변수-꼭-제거하기\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EB%B3%80%EC%88%98-%EA%BC%AD-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0\" aria-label=\"사용하지 않는 변수 꼭 제거하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용하지 않는 변수 꼭 제거하기</h4>\n<p>사용하지 않는 변수는 꼭 제거해야 한다.</p>\n<h4 id=\"변수에-leteral로-할당하는-것-보다-상수로-관리할-수-있다면-관리하자\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%97%90-leteral%EB%A1%9C-%ED%95%A0%EB%8B%B9%ED%95%98%EB%8A%94-%EA%B2%83-%EB%B3%B4%EB%8B%A4-%EC%83%81%EC%88%98%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8B%A4%EB%A9%B4-%EA%B4%80%EB%A6%AC%ED%95%98%EC%9E%90\" aria-label=\"변수에 leteral로 할당하는 것 보다 상수로 관리할 수 있다면 관리하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수에 leteral로 할당하는 것 보다 상수로 관리할 수 있다면 관리하자.</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> startButtonElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.start-btn'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> answerTextBoxElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input.input-answer'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> timeLimit <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>과 같이 관리하는 것 보다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token constant\">START_BTN_CLASSNAME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'.start-btn'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">ANSWER_TEXT_BOX_SELECTOR</span> <span class=\"token operator\">=</span> <span class=\"token string\">'input.input-answer'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">TIME_LIMIT</span> <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>과 같이 상수로 저장시켜두고, (별도로 상수 파일을 만들면 더 좋다. <code class=\"language-text\">variable.js</code>)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> startButtonElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token constant\">START_BTN_CLASSNAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> answerTextBoxElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ANSWER_TEXT_BOX_SELECTOR</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> timeLimit <span class=\"token operator\">=</span> <span class=\"token constant\">TIME_LIMIT</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>와 같이 상수를 이용하게끔 하면 재사용에 대해 대비할 수 있고 훨씬 완성도 있어 보인다.</p>\n<h4 id=\"디버깅을-위한-consolelog는-prpull-request-혹은-mrmerge-request전에-항상-제거하자\" style=\"position:relative;\"><a href=\"#%EB%94%94%EB%B2%84%EA%B9%85%EC%9D%84-%EC%9C%84%ED%95%9C-consolelog%EB%8A%94-prpull-request-%ED%98%B9%EC%9D%80-mrmerge-request%EC%A0%84%EC%97%90-%ED%95%AD%EC%83%81-%EC%A0%9C%EA%B1%B0%ED%95%98%EC%9E%90\" aria-label=\"디버깅을 위한 consolelog는 prpull request 혹은 mrmerge request전에 항상 제거하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디버깅을 위한 console.log는 PR(Pull Request) 혹은 MR(Merge Request)전에 항상 제거하자</h4>\n<p>완성 후 제출을 하는 PR이나 MR에서 디버깅을 위한 console.log가 찍혀있다면 코드 완성도의 느낌이 떨어질 수 있고, master에 Merge시킬 때 관리자가 일일이 다 제거해야되는 번거로움이 생긴다. </p>\n<h3 id=\"코드스타일-관련\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C%EC%8A%A4%ED%83%80%EC%9D%BC-%EA%B4%80%EB%A0%A8\" aria-label=\"코드스타일 관련 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드스타일 관련</h3>\n<h4 id=\"줄임말-보다는-길더라도-명확하게-naming하자\" style=\"position:relative;\"><a href=\"#%EC%A4%84%EC%9E%84%EB%A7%90-%EB%B3%B4%EB%8B%A4%EB%8A%94-%EA%B8%B8%EB%8D%94%EB%9D%BC%EB%8F%84-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-naming%ED%95%98%EC%9E%90\" aria-label=\"줄임말 보다는 길더라도 명확하게 naming하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>줄임말 보다는 길더라도 명확하게 Naming하자</h4>\n<h4 id=\"함축적인-표현보다-길더라도-명확하게-naming하자\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%B6%95%EC%A0%81%EC%9D%B8-%ED%91%9C%ED%98%84%EB%B3%B4%EB%8B%A4-%EA%B8%B8%EB%8D%94%EB%9D%BC%EB%8F%84-%EB%AA%85%ED%99%95%ED%95%98%EA%B2%8C-naming%ED%95%98%EC%9E%90\" aria-label=\"함축적인 표현보다 길더라도 명확하게 naming하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함축적인 표현보다 길더라도 명확하게 Naming하자</h4>\n<p>변수나 함수 Naming시에 짧고 함축적인 것 보다 무조건 명확하게 작성하는게 중요하다.</p>\n<p>예를들어,</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> quizCount<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getQuizCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> quizCount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>처럼 되어있다면, 이 quizCount는 전체 quiz의 개수인지 내가 푼 quiz의 개수인지 알 수 없다.</p>\n<p>logic을 확인해봐야 하는 번거로움이 생긴다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> currentQuizCount<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> allQuizCount<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getCurrentQuizCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> currentQuizCount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">allQuizCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> allQuizCount<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>와 같이 표현하는게 훨씬 좋다.</p>\n<h4 id=\"bool-변수-naming\" style=\"position:relative;\"><a href=\"#bool-%EB%B3%80%EC%88%98-naming\" aria-label=\"bool 변수 naming permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bool 변수 Naming</h4>\n<h4 id=\"함수-naming에서는-동사가-앞에-와야-한다\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-naming%EC%97%90%EC%84%9C%EB%8A%94-%EB%8F%99%EC%82%AC%EA%B0%80-%EC%95%9E%EC%97%90-%EC%99%80%EC%95%BC-%ED%95%9C%EB%8B%A4\" aria-label=\"함수 naming에서는 동사가 앞에 와야 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 Naming에서는 동사가 앞에 와야 한다.</h4>\n<h3 id=\"자바스크립트-문법-관련\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%AC%B8%EB%B2%95-%EA%B4%80%EB%A0%A8\" aria-label=\"자바스크립트 문법 관련 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바스크립트 문법 관련</h3>\n<h4 id=\"addeventlistener-callback함수의-인자인-event-객체에서-target과-currenttarget-차이\" style=\"position:relative;\"><a href=\"#addeventlistener-callback%ED%95%A8%EC%88%98%EC%9D%98-%EC%9D%B8%EC%9E%90%EC%9D%B8-event-%EA%B0%9D%EC%B2%B4%EC%97%90%EC%84%9C-target%EA%B3%BC-currenttarget-%EC%B0%A8%EC%9D%B4\" aria-label=\"addeventlistener callback함수의 인자인 event 객체에서 target과 currenttarget 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>addEventListener callback함수의 인자인 event 객체에서 target과 currentTarget 차이?</h4>\n<p>event 객체에서, target은 event가 실제로 일어나는 element라고 보면되고,</p>\n<blockquote>\n<p>click이벤트면 실제 click한 element</p>\n</blockquote>\n<p>event.currentTarget은 event가 실제 장착된 element라고 보면 된다.</p>\n<blockquote>\n<p>click 이벤트면 element.addEventListener() 로 실제 이벤트 등록한 element</p>\n</blockquote>\n<p>아마 대부분의 경우에서는 target과 currentTarget은 같을 것 같다.</p>\n<p>하지만 다른 경우가 존재하는데,</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    \n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>다음과 같이 outer에 이벤트를 추가하면, 자식인 inner에도 해당 이벤트가 발생이 된다.</p>\n<p>근데, inner를 클릭해서 outer에 추가한 이벤트가 발생할때에</p>\n<p>target과 currentTarget이 달라질 수 있다.</p>\n<blockquote>\n<p>target : inner / currentTarget : outer</p>\n</blockquote>\n<p>바로 event를 추가한 element 내부에 존재하는 element가 있을 때, 이 내부에 존재하는 element에서 등록된 event가 발생되었다면 <strong><code class=\"language-text\">currentTarget</code>은 Event가 등록된 element</strong>이고, <strong><code class=\"language-text\">target</code>은 현재 이벤트가 발생된 element</strong>이다.</p>\n<h4 id=\"addeventlistener에-함수-인스턴스-차이\" style=\"position:relative;\"><a href=\"#addeventlistener%EC%97%90-%ED%95%A8%EC%88%98-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%B0%A8%EC%9D%B4\" aria-label=\"addeventlistener에 함수 인스턴스 차이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>addEventListener에 함수 인스턴스 차이</h4>\n<p>아래 예제를 통해 차이를 확인하자.</p>\n<ul>\n<li>\n<p>선언 및 생성된 함수 인스턴스</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">onClickHandler</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function\">onSubmitMessage</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> onClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nformElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> onSubmitMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> onClickHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 이미 똑같은 함수 인스턴스로 이벤트 등록되어 있기 때문에 추가 등록 되지 않음</span>\nformElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> onSubmitMessage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 이미 똑같은 함수 인스턴스로 이벤트 등록되어 있기 때문에 추가 등록 되지 않음</span>\n\n<span class=\"token comment\">// 버튼 클릭시 'click' 로그 한 번</span>\n<span class=\"token comment\">// submit시 'submit' 로그 한 번</span></code></pre></div>\n</li>\n<li>\n<p>익명함수 인스턴스</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">buttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nformElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 함수 인스턴스는 새롭게 생성된 함수 인스턴스이기 때문에 로직만 같을 뿐 똑같은 함수 인스턴스가 없으므로 이벤트 리스너에 추가된다.</span>\nbuttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nformElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 버튼 클릭시 'click' 로그 두 번</span>\n<span class=\"token comment\">// submit시 'submit' 로그 두 번</span></code></pre></div>\n</li>\n</ul>\n<p>참고자료 : <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Multiple_identical_event_listeners\">Multiple identical event listeners</a></p>\n<h4 id=\"-addeventlistener의-callback-함수에서의-this-키워드\" style=\"position:relative;\"><a href=\"#-addeventlistener%EC%9D%98-callback-%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C%EC%9D%98-this-%ED%82%A4%EC%9B%8C%EB%93%9C\" aria-label=\" addeventlistener의 callback 함수에서의 this 키워드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>* addEventListener의 callback 함수에서의 this 키워드</h4>\n<p>내가 클래스 키워드를 이용해서 컴포넌트를 만들어봤는데, 이 때 이 컴포넌트에 해당되는 버튼을 클릭하면 버튼클릭 이벤트를 추가하는 부분을 넣은 적이 있었다. 하지만 내부에서 <code class=\"language-text\">this</code>키워드가 제대로 동작하지 않았는데 다음을 살펴보자.</p>\n<p><code class=\"language-text\">#</code>으로 붙은 변수들은 class에서 <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes#Field_declarations\">private field</a>로 선언된 것들이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">myComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 아래는 private field 선언</span>\n    #targetElement<span class=\"token punctuation\">;</span>\n    #requireData<span class=\"token punctuation\">;</span>\n    #onClickButton<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">constructor</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> $target<span class=\"token punctuation\">,</span> requireData<span class=\"token punctuation\">,</span> onClickButton <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#targetElement <span class=\"token operator\">=</span> $target<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#requireData <span class=\"token operator\">=</span> requireData<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#onClickButton <span class=\"token operator\">=</span> onClickButton<span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>buttonElement <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>#targetElement<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.button'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">setEvent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 아래와 같이 button Element에 함수 선언식으로 구현된 함수를 onClick Event로 추가</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>buttonElement<span class=\"token punctuation\">.</span><span class=\"token function\">addEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'click'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onButtonClickInnerHandler<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    \n\t<span class=\"token keyword\">function</span> <span class=\"token function\">onButtonClickInnerHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    \tconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'this data:'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>requireData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 현재 클래스로 생성된 인스턴스의 requireData를 사용하려고 하였음.</span>\n        \n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">#onClickButton</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 생성자 인자로 받았던 onClickButton함수 실행</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드처럼 구현을 했었는데, 문제가 있었다.</p>\n<p>문제는 <code class=\"language-text\">addEventListener</code>로 등록된 <code class=\"language-text\">onButtonClickInnerHandler</code> 함수에서 발생하였는데,\n<code class=\"language-text\">addEventListener</code>로 등록된 함수에서의 <code class=\"language-text\">this</code>키워드는 <code class=\"language-text\">event.target</code>과 똑같다.</p>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>","frontmatter":{"title":"바닐라코딩 Prep 과제로 받은 코드스타일링","date":"December 03, 2020"}}},"pageContext":{"slug":"/2020/drafts/바닐라코딩-Prep으로받은-코드스타일링_정리/","previous":{"fields":{"slug":"/2020/vanillacoding_prep/Prep 9주차 수요일 오피스아워 정리/"},"frontmatter":{"title":"바닐라코딩 Prep 9주차 수요일 오피스아워 정리","category":"vanilla coding","draft":false}},"next":null}}}
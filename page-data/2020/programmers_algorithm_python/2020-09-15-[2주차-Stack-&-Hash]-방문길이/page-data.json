{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/programmers_algorithm_python/2020-09-15-[2주차-Stack-&-Hash]-방문길이/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"8275b420-6e6d-518f-b64b-bda084cbd580","excerpt":"문제 설명 게임 캐릭터를 4가지 명령어를 통해 움직이려 합니다. 명령어는 다음과 같습니다. U: 위쪽으로 한 칸 가기 D: 아래쪽으로 한 칸 가기 R: 오른쪽으로 한 칸 가기 L: 왼쪽으로 한 칸 가기 캐릭터는 좌표평면의 (0, 0) 위치에서 시작합니다. 좌표평면의 경계는 왼쪽 위(-5, 5), 왼쪽 아래(-5, -5), 오른쪽 위(5, 5), 오른쪽 아래(5, -5)로 이루어져 있습니다. image 예를 들어, ULURRDLLU로 명령했다면 image 1번 명령어부터…","html":"<h2 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h2>\n<p>게임 캐릭터를 4가지 명령어를 통해 움직이려 합니다. 명령어는 다음과 같습니다.</p>\n<ul>\n<li>U: 위쪽으로 한 칸 가기</li>\n<li>D: 아래쪽으로 한 칸 가기</li>\n<li>R: 오른쪽으로 한 칸 가기</li>\n<li>L: 왼쪽으로 한 칸 가기</li>\n</ul>\n<p>캐릭터는 좌표평면의 (0, 0) 위치에서 시작합니다. 좌표평면의 경계는 왼쪽 위(-5, 5), 왼쪽 아래(-5, -5), 오른쪽 위(5, 5), 오른쪽 아래(5, -5)로 이루어져 있습니다.</p>\n<p><img src=\"https://res.cloudinary.com/jistring93/image/upload/v1495542181/%EB%B0%A9%EB%AC%B8%EA%B8%B8%EC%9D%B41_qpp9l3.png\" alt=\"image\"></p>\n<p>예를 들어, ULURRDLLU로 명령했다면</p>\n<p><img src=\"https://res.cloudinary.com/jistring93/image/upload/v1495542443/%EB%B0%A9%EB%AC%B8%EA%B8%B8%EC%9D%B42_lezmdo.png\" alt=\"image\"></p>\n<ul>\n<li>1번 명령어부터 7번 명령어까지 다음과 같이 움직입니다.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/jistring93/image/upload/v1495542704/%EB%B0%A9%EB%AC%B8%EA%B8%B8%EC%9D%B43_sootjd.png\" alt=\"image\"></p>\n<ul>\n<li>8번 명령어부터 9번 명령어까지 다음과 같이 움직입니다.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/jistring93/image/upload/v1495542767/%EB%B0%A9%EB%AC%B8%EA%B8%B8%EC%9D%B44_hlpiej.png\" alt=\"image\"></p>\n<p>이때, 우리는 게임 캐릭터가 지나간 길 중 <strong>캐릭터가 처음 걸어본 길의 길이</strong>를 구하려고 합니다. 예를 들어 위의 예시에서 게임 캐릭터가 움직인 길이는 9이지만, 캐릭터가 처음 걸어본 길의 길이는 7이 됩니다. (8, 9번 명령어에서 움직인 길은 2, 3번 명령어에서 이미 거쳐 간 길입니다)</p>\n<p>단, 좌표평면의 경계를 넘어가는 명령어는 무시합니다.</p>\n<p>예를 들어, LULLLLLLU로 명령했다면</p>\n<p><img src=\"https://res.cloudinary.com/jistring93/image/upload/v1495545063/%EB%B0%A9%EB%AC%B8%EA%B8%B8%EC%9D%B45_nitjwj.png\" alt=\"image\"></p>\n<ul>\n<li>1번 명령어부터 6번 명령어대로 움직인 후, 7, 8번 명령어는 무시합니다. 다시 9번 명령어대로 움직입니다.</li>\n</ul>\n<p><img src=\"https://res.cloudinary.com/jistring93/image/upload/v1495544946/%EB%B0%A9%EB%AC%B8%EA%B8%B8%EC%9D%B46_nzhumd.png\" alt=\"image\"></p>\n<p>이때 캐릭터가 처음 걸어본 길의 길이는 7이 됩니다.</p>\n<p>명령어가 매개변수 dirs로 주어질 때, 게임 캐릭터가 처음 걸어본 길의 길이를 구하여 return 하는 solution 함수를 완성해 주세요.</p>\n<h2 id=\"제한사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C%EC%82%AC%ED%95%AD\" aria-label=\"제한사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한사항</h2>\n<ul>\n<li>dirs는 string형으로 주어지며, ‘U’, ‘D’, ‘R’, ‘L’ 이외에 문자는 주어지지 않습니다.</li>\n<li>dirs의 길이는 500 이하의 자연수입니다.</li>\n</ul>\n<h5 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h5>\n<table>\n<thead>\n<tr>\n<th>dirs</th>\n<th>answer</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ULURRDLLU</td>\n<td>7</td>\n</tr>\n<tr>\n<td>LULLLLLLU</td>\n<td>7</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"입출력-예-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88-%EC%84%A4%EB%AA%85\" aria-label=\"입출력 예 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예 설명</h5>\n<p>입출력 예 #1\n문제의 예시와 같습니다.</p>\n<p>입출력 예 #2\n문제의 예시와 같습니다.</p>\n<h2 id=\"나의-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4\" aria-label=\"나의 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h2>\n<h3 id=\"첫번째-풀이\" style=\"position:relative;\"><a href=\"#%EC%B2%AB%EB%B2%88%EC%A7%B8-%ED%92%80%EC%9D%B4\" aria-label=\"첫번째 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫번째 풀이</h3>\n<h4 id=\"소스\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4\" aria-label=\"소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>dirs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    cur_position <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    visit_logs <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token builtin\">dir</span> <span class=\"token keyword\">in</span> dirs<span class=\"token punctuation\">:</span>\n        cur_xpos<span class=\"token punctuation\">,</span> cur_ypos <span class=\"token operator\">=</span> cur_position\n        <span class=\"token comment\"># 명령어를 체크하고 다음위치를 확인한다.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">dir</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"U\"</span><span class=\"token punctuation\">:</span>\n            next_position <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cur_xpos<span class=\"token punctuation\">,</span> cur_ypos <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">dir</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"L\"</span><span class=\"token punctuation\">:</span>\n            next_position <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cur_xpos <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cur_ypos<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">dir</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">:</span>\n            next_position <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cur_xpos<span class=\"token punctuation\">,</span> cur_ypos <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">elif</span> <span class=\"token builtin\">dir</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"R\"</span><span class=\"token punctuation\">:</span>\n            next_position <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>cur_xpos <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> cur_ypos<span class=\"token punctuation\">]</span>\n\n        <span class=\"token comment\"># 벗어나는 영역이면 현재 위치 그대로 두고 넘어간다.</span>\n        <span class=\"token keyword\">if</span> next_position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token keyword\">or</span> next_position<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span> <span class=\"token keyword\">or</span> next_position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span> <span class=\"token keyword\">or</span> next_position<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">continue</span>\n\n        <span class=\"token comment\"># 0,0-1,0 과 같은 형태로 키를 만든다.</span>\n        visit_log <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> cur_position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> \\\n            <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> next_position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        visit_log_reverse <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>\n            <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> next_position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'-'</span> <span class=\"token operator\">+</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> cur_position<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 방문하지 않았다면 visit_logs에 방문을 기록하고 방문길이를 더한다.</span>\n        <span class=\"token keyword\">if</span> visit_log <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> visit_logs<span class=\"token punctuation\">:</span>\n            answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n            visit_logs<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>visit_log<span class=\"token punctuation\">)</span>\n            visit_logs<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>visit_log_reverse<span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># 다음 위치로 이동한다.</span>\n        cur_position <span class=\"token operator\">=</span> next_position\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h4 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h4>\n<ul>\n<li>이 문제는 방문 기록을 해쉬를 통해 관리하면 쉽게 풀 수 있다.</li>\n<li>하지만 역순으로도 기록을 해야 된다는 점이 문제풀이의 핵심.</li>\n<li>각 명령어에 맞게 위치를 조정하고 지나온 길을 해쉬에 기록.</li>\n<li>키를 나는 string으로 했는데, unmutable한 tuple도 딕셔너리의 키가 될 수 있었다.</li>\n<li>\n<h5 id=\"질문\" style=\"position:relative;\"><a href=\"#%EC%A7%88%EB%AC%B8\" aria-label=\"질문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>질문</h5>\n<ul>\n<li>이렇게 구현하면 O(n)이겠죠?</li>\n<li>키 값을 제가 지나온 길을 “0,0-1,0” 과 같은 형태의 string으로 만들어서 넣는데요 (“1,0-0,0” 도 같이) 더 좋은 방법의 키값설정이 있을까요?</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"결과\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC\" aria-label=\"결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h4>\n<p>통과</p>\n<h4 id=\"리뷰\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%B7%B0\" aria-label=\"리뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리뷰</h4>\n<blockquote>\n<ul>\n<li>dirs만큼 순회하기 때문에 O(n)이 맞습니다. :)</li>\n<li>string대신 다음과 같이 tuple로 설정할 수 있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">visit_log = (*cur_position, *next_position)\nvisit_log_reverse = (*next_position, *cur_position)</code></pre></div>\n</blockquote>\n<h2 id=\"스터디-리더의-풀이\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%84%B0%EB%94%94-%EB%A6%AC%EB%8D%94%EC%9D%98-%ED%92%80%EC%9D%B4\" aria-label=\"스터디 리더의 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스터디 리더의 풀이</h2>\n<h3 id=\"풀이-1\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B4-1\" aria-label=\"풀이 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이 1</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>dirs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x<span class=\"token punctuation\">,</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 시작 좌표를 0, 0으로 지정</span>\n    <span class=\"token builtin\">map</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 좌표를 키로 사용하는 해시 생성</span>\n    <span class=\"token keyword\">for</span> command <span class=\"token keyword\">in</span> dirs<span class=\"token punctuation\">:</span> <span class=\"token comment\"># O(dirs)</span>\n        <span class=\"token keyword\">if</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'U'</span> <span class=\"token keyword\">and</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 위로</span>\n            <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 현재 좌표, 이동할 좌표</span>\n            <span class=\"token comment\"># x, y 좌표 작은게 왼쪽으로~</span>\n            y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'D'</span> <span class=\"token keyword\">and</span> y <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 아래로</span>\n            <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 이동할 좌표, 현재 좌표</span>\n            y <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'R'</span> <span class=\"token keyword\">and</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 오른쪽으로</span>\n            <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 현재 좌표, 이동할 좌표</span>\n            x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> command <span class=\"token operator\">==</span> <span class=\"token string\">'L'</span> <span class=\"token keyword\">and</span> x <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 왼쪽으로</span>\n            <span class=\"token builtin\">map</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span> <span class=\"token comment\"># 이동할 좌표, 현재 좌표.</span>\n            x <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 추가된 값들이 곧 방문 길이</span></code></pre></div>\n<h3 id=\"풀이2\" style=\"position:relative;\"><a href=\"#%ED%92%80%EC%9D%B42\" aria-label=\"풀이2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>풀이2</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>dirs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    position <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 시작 좌표를 0, 0으로 지정</span>\n\n    command_dict <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">'U'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'R'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'L'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    check <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 좌표를 키로 사용하는 해시 생성</span>\n    <span class=\"token keyword\">for</span> command <span class=\"token keyword\">in</span> dirs<span class=\"token punctuation\">:</span> <span class=\"token comment\"># O(dirs)</span>\n        direction <span class=\"token operator\">=</span> command_dict<span class=\"token punctuation\">[</span>command<span class=\"token punctuation\">]</span>\n        next_position <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>position<span class=\"token punctuation\">,</span> direction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n        y<span class=\"token punctuation\">,</span> x <span class=\"token operator\">=</span> next_position\n        <span class=\"token keyword\">if</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span> <span class=\"token operator\">&lt;=</span> y <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span> <span class=\"token keyword\">and</span> <span class=\"token operator\">-</span><span class=\"token number\">5</span> <span class=\"token operator\">&lt;=</span> x <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span>\n            check<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>position<span class=\"token punctuation\">,</span> next_position<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            position <span class=\"token operator\">=</span> next_position\n\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>check<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"[2주차 Stack & Hash] 방문길이 - Lv3","date":"September 15, 2020"}}},"pageContext":{"slug":"/2020/programmers_algorithm_python/2020-09-15-[2주차-Stack-&-Hash]-방문길이/","previous":{"fields":{"slug":"/2020/programmers_algorithm_python/2020-09-14-[2주차-Stack-&-Hash]-빙고/"},"frontmatter":{"title":"[2주차 Stack & Hash] 빙고 - Lv3","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/2020/programmers_algorithm_python/2020-09-15-[2주차-Stack-&-Hash]-짝지어 제거하기/"},"frontmatter":{"title":"[2주차 Stack & Hash] 짝지어제거하기 - Lv2","category":"algorithm","draft":false}}}}}
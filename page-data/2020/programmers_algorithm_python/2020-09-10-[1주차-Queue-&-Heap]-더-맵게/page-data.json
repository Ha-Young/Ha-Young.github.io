{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/programmers_algorithm_python/2020-09-10-[1주차-Queue-&-Heap]-더-맵게/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"d7e36c74-d993-5db4-94ab-36454e5189dc","excerpt":"문제 설명 매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다. Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다.\nLeo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌 지수를 K…","html":"<h2 id=\"문제-설명\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\" aria-label=\"문제 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 설명</h2>\n<p>매운 것을 좋아하는 Leo는 모든 음식의 스코빌 지수를 K 이상으로 만들고 싶습니다. 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 Leo는 스코빌 지수가 가장 낮은 두 개의 음식을 아래와 같이 특별한 방법으로 섞어 새로운 음식을 만듭니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">섞은 음식의 스코빌 지수 = 가장 맵지 않은 음식의 스코빌 지수 + (두 번째로 맵지 않은 음식의 스코빌 지수 * 2)</code></pre></div>\n<p>Leo는 모든 음식의 스코빌 지수가 K 이상이 될 때까지 반복하여 섞습니다.\nLeo가 가진 음식의 스코빌 지수를 담은 배열 scoville과 원하는 스코빌 지수 K가 주어질 때, 모든 음식의 스코빌 지수를 K 이상으로 만들기 위해 섞어야 하는 최소 횟수를 return 하도록 solution 함수를 작성해주세요.</p>\n<h2 id=\"제한-사항\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\" aria-label=\"제한 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한 사항</h2>\n<ul>\n<li>scoville의 길이는 1 이상 1,000,000 이하입니다.</li>\n<li>K는 0 이상 1,000,000,000 이하입니다.</li>\n<li>scoville의 원소는 각각 0 이상 1,000,000 이하입니다.</li>\n<li>모든 음식의 스코빌 지수를 K 이상으로 만들 수 없는 경우에는 -1을 return 합니다.</li>\n</ul>\n<h2 id=\"입출력-예\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\" aria-label=\"입출력 예 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입출력 예</h2>\n<table>\n<thead>\n<tr>\n<th>scoville</th>\n<th>K</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[1, 2, 3, 9, 10, 12]</td>\n<td>7</td>\n<td>2</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>스코빌 지수가 1인 음식과 2인 음식을 섞으면 음식의 스코빌 지수가 아래와 같이 됩니다.\n새로운 음식의 스코빌 지수 = 1 + (2 * 2) = 5\n가진 음식의 스코빌 지수 = [5, 3, 9, 10, 12]</li>\n<li>스코빌 지수가 3인 음식과 5인 음식을 섞으면 음식의 스코빌 지수가 아래와 같이 됩니다.\n새로운 음식의 스코빌 지수 = 3 + (5 * 2) = 13\n가진 음식의 스코빌 지수 = [13, 9, 10, 12]</li>\n</ol>\n<p>모든 음식의 스코빌 지수가 7 이상이 되었고 이때 섞은 횟수는 2회입니다.</p>\n<h2 id=\"나의-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4\" aria-label=\"나의 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>나의 풀이</h2>\n<h3 id=\"첫-번째-풀이\" style=\"position:relative;\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%ED%92%80%EC%9D%B4\" aria-label=\"첫 번째 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 풀이</h3>\n<h4 id=\"소스\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%8A%A4\" aria-label=\"소스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소스</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> heapq <span class=\"token keyword\">import</span> heapify<span class=\"token punctuation\">,</span> heappush<span class=\"token punctuation\">,</span> heappop\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">,</span> K<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n    <span class=\"token comment\"># heap을 사용해서 자동정렬이 되도록 해준다.</span>\n    heapify<span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 계속해서 mix해서 하나가 남을 때 까지 계속한다.</span>\n    <span class=\"token keyword\">while</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># 만약, 가장 작은값이 K보다 크다면보다 큰 경우이므로 바로 answer 리턴.</span>\n        <span class=\"token keyword\">if</span> scoville<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> K<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> answer\n\n        <span class=\"token comment\"># mix해서 다시 heap에 넣는다.</span>\n        minist <span class=\"token operator\">=</span> heappop<span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">)</span>\n        second_minist <span class=\"token operator\">=</span> heappop<span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">)</span>\n        mixed_scovile <span class=\"token operator\">=</span> minist <span class=\"token operator\">+</span> second_minist <span class=\"token operator\">*</span> <span class=\"token number\">2</span>\n        answer <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        heappush<span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">,</span> mixed_scovile<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 모든 음식의 스코빌 지수를 K이상으로 만들 수 없는 경우</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>scoville<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">and</span> scoville<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<h4 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h4>\n<p>이 문제는 heap이나 priority queue를 알고 있으면 정말 쉬운 문제인데,</p>\n<p>문제 설명에서도 가장 낮은 두개의 값이 필요하고 섞어서 다시 넣어서 다시 정렬된 배열을 이용해야된다는 점에서, heap과 priority queue라는걸 바로 캐치해야 된다.</p>\n<p>나는 heapq 모듈을 써서 구현하였다.</p>\n<h4 id=\"결과\" style=\"position:relative;\"><a href=\"#%EA%B2%B0%EA%B3%BC\" aria-label=\"결과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>결과</h4>\n<p>통과.</p>\n<h4 id=\"시간복잡도\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\" aria-label=\"시간복잡도 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시간복잡도</h4>\n<p>heap에 값을 추가하고 삭제하는 것 모두 O(log n).</p>\n<p>초기 heapify로 heap에 넣어주는 과정에서 n 번 * 푸쉬하는 비용 lon n 으로\nO(n log n)</p>\n<h4 id=\"리뷰\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%B7%B0\" aria-label=\"리뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리뷰</h4>\n<p>통과해서 별 리뷰는 없었고,\n예외 처리는 <code class=\"language-text\">if</code>를 이용한 분기보다 <code class=\"language-text\">try ~ except</code>를 사용하는 것이 좀 더 파이썬스럽습니다. :)\n<code class=\"language-text\">if</code>를 이용한 예외 처리를 LBYL이라 부르고 <code class=\"language-text\">try ~ except</code>를 이용한 예외 처리를 EAFP라고 부릅니다. 파이썬은 EAFP 방식을 권장하고 있습니다. :)\n<a href=\"https://suwoni-codelab.com/python%20%EA%B8%B0%EB%B3%B8/2018/03/06/Python-Basic-EAFP/\">https://suwoni-codelab.com/python%20%EA%B8%B0%EB%B3%B8/2018/03/06/Python-Basic-EAFP/</a>\n관련 블로그 글 입니다.</p>\n<p>와 같은 리뷰는 받았다.</p>","tableOfContents":"<ul>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EB%AC%B8%EC%A0%9C-%EC%84%A4%EB%AA%85\">문제 설명</a></li>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EC%A0%9C%ED%95%9C-%EC%82%AC%ED%95%AD\">제한 사항</a></li>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%98%88\">입출력 예</a></li>\n<li>\n<p><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EB%82%98%EC%9D%98-%ED%92%80%EC%9D%B4\">나의 풀이</a></p>\n<ul>\n<li>\n<p><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%ED%92%80%EC%9D%B4\">첫 번째 풀이</a></p>\n<ul>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EC%86%8C%EC%8A%A4\">소스</a></li>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EC%84%A4%EB%AA%85\">설명</a></li>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EA%B2%B0%EA%B3%BC\">결과</a></li>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EC%8B%9C%EA%B0%84%EB%B3%B5%EC%9E%A1%EB%8F%84\">시간복잡도</a></li>\n<li><a href=\"/2020/programmers_algorithm_python/2020-09-10-%5B1%EC%A3%BC%EC%B0%A8-Queue-&#x26;-Heap%5D-%EB%8D%94-%EB%A7%B5%EA%B2%8C/#%EB%A6%AC%EB%B7%B0\">리뷰</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"[1주차 Queue & Heap] 더 맵게 - Lv2","date":"September 10, 2020"}}},"pageContext":{"slug":"/2020/programmers_algorithm_python/2020-09-10-[1주차-Queue-&-Heap]-더-맵게/","previous":{"fields":{"slug":"/2020/programmers_algorithm_python/2020-09-04-[1주차-Queue-&-Heap]-FloodFill/"},"frontmatter":{"title":"[1주차 Queue & Heap] Flood Fill - Lv3","category":"algorithm","draft":false}},"next":{"fields":{"slug":"/2020/programmers_algorithm_python/2020-09-10-1주차-모의고사-전염병/"},"frontmatter":{"title":"[1주차 모의고사] 전염병 - Lv3","category":"algorithm","draft":false}}}}}
{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/vanillacoding_prep/Prep 7주차 수요일 오피스아워 정리/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"ffb58d2f-15de-5bbb-8ddc-ac4664417440","excerpt":"클로저 함수가 선언될 당시 주변환경과 함께 갇히는 것 실행되는 장소나 시점은 관계가 없다. Quiz1. 9 라인에서 함수(레퍼런스)가 리턴되고, 11라인에서 함수가 그냥 실행 될 것 같지만, 함수가 선언된 위치에서 접근 할 수 있는 변수들이 정해지는 것이므로 상위 scope인 변수 a와 b를 사용할 수 있다. (const 이므로 block scope) Quiz2. carrot와 mushroom함수가 선언되고, 맨 마지막줄의 carrot() 함수가 실행된다. 실행 되면서 food 변수와 potato…","html":"<h2 id=\"클로저\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%A1%9C%EC%A0%80\" aria-label=\"클로저 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클로저</h2>\n<p><strong>함수가 선언될 당시</strong> 주변환경과 함께 갇히는 것</p>\n<p><strong>실행되는 장소나 시점은 관계가 없다</strong>.</p>\n<h3 id=\"quiz1\" style=\"position:relative;\"><a href=\"#quiz1\" aria-label=\"quiz1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quiz1.</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">const</span> b <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> log\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> func <span class=\"token operator\">=</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>9 라인에서 함수(레퍼런스)가 리턴되고,</p>\n<p>11라인에서</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수가 그냥 실행 될 것 같지만, <strong>함수가 선언된 위치에서</strong> 접근 할 수 있는 변수들이 정해지는 것이므로 상위 scope인 변수 a와 b를 사용할 수 있다. (const 이므로 block scope)</p>\n<h3 id=\"quiz2\" style=\"position:relative;\"><a href=\"#quiz2\" aria-label=\"quiz2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quiz2.</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">carrot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> potatoCount <span class=\"token operator\">=</span> <span class=\"token string\">'jjajang'</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">potato</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>food<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">mushroom</span><span class=\"token punctuation\">(</span>potato<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">mushroom</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">fn</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">carrot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>carrot와 mushroom함수가 선언되고, 맨 마지막줄의 carrot() 함수가 실행된다.</p>\n<p>실행 되면서 food 변수와 potato() 함수가 선언 및 할당이 되고, mushroom 함수가 실행이 되면서 potato 함수가 인자로 넘어간다.</p>\n<p>mushroom 내부에서 potato 함수가 실행되면서 potato 함수가 실행되는데, 여기서 food는 potato 함수가 선언되어있는 carrot 함수 내부의 변수와 클로저가 형성되어 사용 가능.</p>\n<h3 id=\"quiz3\" style=\"position:relative;\"><a href=\"#quiz3\" aria-label=\"quiz3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quiz3.</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">carrot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> potatoCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">potato</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    potatoCount<span class=\"token operator\">++</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>potatoCount<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> potato\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> veggie <span class=\"token operator\">=</span> <span class=\"token function\">carrot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">veggie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1</span>\n<span class=\"token function\">veggie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2</span>\n<span class=\"token function\">veggie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 3</span></code></pre></div>\n<p>이 문제도 위와 마찬가지로 클로저가 형성이 되나, 클로저로 형성된 변수는 지속적으로 모니터링 한다고 보면 된다.</p>\n<p><strong>라이브 레퍼런스</strong>라고 한다.</p>\n<h3 id=\"quiz4\" style=\"position:relative;\"><a href=\"#quiz4\" aria-label=\"quiz4 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quiz4.</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">addCurry</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// addCurry는 함수를 선언해서(새로 만들어서) 리턴!</span>\n\n<span class=\"token keyword\">const</span> addFive <span class=\"token operator\">=</span> <span class=\"token function\">addCurry</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> addTen <span class=\"token operator\">=</span> <span class=\"token function\">addCurry</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// addFive와 addTen은 다른 함수!</span>\n<span class=\"token comment\">// 따라서 addFive와 addTen의 클로저는 다르다.</span></code></pre></div>\n<p>addFive와 addTen은 다른 메모리에 다른 참조값.</p>\n<h2 id=\"q-화살표-함수의-this\" style=\"position:relative;\"><a href=\"#q-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EC%9D%98-this\" aria-label=\"q 화살표 함수의 this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 화살표 함수의 this</h2>\n<p>화살표 함수의 this가 스코프체인상 가장 가까운 this에 접근하게 되는 것도 클로저랑 비슷한건가?</p>\n<p>-> 맞다. 화살표함수는 내부에 this가 없기 때문에 클로저로 형성된 this가 사용되는 것.</p>\n<h2 id=\"q-클로저-퀴즈-for문-i에-각각-다른함수가-담기나요\" style=\"position:relative;\"><a href=\"#q-%ED%81%B4%EB%A1%9C%EC%A0%80-%ED%80%B4%EC%A6%88-for%EB%AC%B8-i%EC%97%90-%EA%B0%81%EA%B0%81-%EB%8B%A4%EB%A5%B8%ED%95%A8%EC%88%98%EA%B0%80-%EB%8B%B4%EA%B8%B0%EB%82%98%EC%9A%94\" aria-label=\"q 클로저 퀴즈 for문 i에 각각 다른함수가 담기나요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 클로저 퀴즈 for문 i에 각각 다른함수가 담기나요?</h2>\n<p>맞다, 아래 표현과 같이 timer() 함수를 계속해서 새로 선언하고 setTimeout 함수로 실행시키는 것.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">//는 아래와 같다.</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">timer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>timer<span class=\"token punctuation\">,</span> i <span class=\"token operator\">*</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>퀴즈에 대해서 더 설명하자면,</p>\n<p>var i는 현재 함수(global)스코프에 하나가 있다.</p>\n<p>timer라는 함수가 다음과 같이 5개 생긴다. (실행은 아님)</p>\n<p>timer1 (1초뒤 실행) 생성 - 클로저 형성(var i)\ntimer2 (2초뒤 실행) 생성 - 클로저 형성(var i)\ntimer3 (3초뒤 실행) 생성 - 클로저 형성(var i)\ntimer4 (4초뒤 실행) 생성 - 클로저 형성(var i)\ntimer5 (5초뒤 실행) 생성 - 클로저 형성(var i)</p>\n<blockquote>\n<p>var i 이기 때문에 모두 같은 i를 바라봄.</p>\n</blockquote>\n<p>이후, for문이 끝난다음에서야 setTimeout에 의해 timer 함수들이 실행된다.</p>\n<p>그리고 timer 함수들이 실행되는 시점에서는 클로저로 형성된 var i 값이 6이되기 때문에(for문은 timer 함수들이 실행되기전에 완료되었기 때문) 모두 6이 찍힌다.</p>\n<blockquote>\n<p>timer함수는 모두 같은 i를 바라보고 있기때문에.</p>\n</blockquote>\n<h2 id=\"재귀-함수\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EA%B7%80-%ED%95%A8%EC%88%98\" aria-label=\"재귀 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재귀 함수</h2>\n<p>재귀 함수를 구현할때에는 반드시 Termination Case가 있어야 한다.</p>\n<p>Termination Case가 없으면 재귀호출이 끊임없이 호출된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 끝이나지 않는다.</span></code></pre></div>\n<p>반드시 재귀함수가 끝나는 부분이 함수 내부에 있어야 한다.</p>\n<h3 id=\"실수하기-쉬운-부분\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EB%B6%80%EB%B6%84\" aria-label=\"실수하기 쉬운 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수하기 쉬운 부분</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">===</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">rabbits</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>와 같이 실행해보면, Termination Case에 걸리지 않는 경우</p>\n<h2 id=\"q-life-of-rabbit-예시가-recursion의-대부분\" style=\"position:relative;\"><a href=\"#q-life-of-rabbit-%EC%98%88%EC%8B%9C%EA%B0%80-recursion%EC%9D%98-%EB%8C%80%EB%B6%80%EB%B6%84\" aria-label=\"q life of rabbit 예시가 recursion의 대부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. Life of Rabbit 예시가 Recursion의 대부분?</h2>\n<p>Life of Rabbit은 대부분의 Recursion에 적용시킬 수 있는것인가?</p>\n<p>-> Life of Rabbit은 Fibonacci를 Recursion 표현이다. 다른 방식으로 된 Recursion이 많음.</p>\n<p>또한 Fibonacci도 Recursion이 아닌 다른방법으로도 풀 수 있다.</p>\n<h2 id=\"getelementsbyclassname-recursion\" style=\"position:relative;\"><a href=\"#getelementsbyclassname-recursion\" aria-label=\"getelementsbyclassname recursion permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>getElementsByClassName Recursion</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> className</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol>\n<li>우선, 깊은 생각 없이 로직을 쭉 나열해본다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getElementsByClassName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el<span class=\"token punctuation\">,</span> className</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> el<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> child<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> grandChild <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span>children<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>grandChild<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span>className<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>grandChild<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token comment\">// 반복...</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> result\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>반복되는 내용이 보이면, 함수로 만든다.</li>\n<li>반복되면서 바뀌는 값은 매개변수로 받게 한다.</li>\n</ol>\n<h2 id=\"q-재귀함수-반복되는-인자-네이밍-팁\" style=\"position:relative;\"><a href=\"#q-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98-%EB%B0%98%EB%B3%B5%EB%90%98%EB%8A%94-%EC%9D%B8%EC%9E%90-%EB%84%A4%EC%9D%B4%EB%B0%8D-%ED%8C%81\" aria-label=\"q 재귀함수 반복되는 인자 네이밍 팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 재귀함수 반복되는 인자 네이밍 팁?</h2>\n<p>팁은 딱히 없고, 상황마다 다르기때문에 그때그때 코드리뷰 받으면서 익혀가보자.</p>\n<h2 id=\"etc\" style=\"position:relative;\"><a href=\"#etc\" aria-label=\"etc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ETC</h2>\n<ul>\n<li>\n<p>사무실 이사갑니다.</p>\n<ul>\n<li>역삼역 3번출구 위워크건물 뒤쪽</li>\n<li>스퀘어 736타워</li>\n</ul>\n</li>\n<li>켄님 홈페이지 고쳐주세요~!</li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#%ED%81%B4%EB%A1%9C%EC%A0%80\">클로저</a></p>\n<ul>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#quiz1\">Quiz1.</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#quiz2\">Quiz2.</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#quiz3\">Quiz3.</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#quiz4\">Quiz4.</a></li>\n</ul>\n</li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#q-%ED%99%94%EC%82%B4%ED%91%9C-%ED%95%A8%EC%88%98%EC%9D%98-this\">Q. 화살표 함수의 this</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#q-%ED%81%B4%EB%A1%9C%EC%A0%80-%ED%80%B4%EC%A6%88-for%EB%AC%B8-i%EC%97%90-%EA%B0%81%EA%B0%81-%EB%8B%A4%EB%A5%B8%ED%95%A8%EC%88%98%EA%B0%80-%EB%8B%B4%EA%B8%B0%EB%82%98%EC%9A%94\">Q. 클로저 퀴즈 for문 i에 각각 다른함수가 담기나요?</a></li>\n<li>\n<p><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#%EC%9E%AC%EA%B7%80-%ED%95%A8%EC%88%98\">재귀 함수</a></p>\n<ul>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#%EC%8B%A4%EC%88%98%ED%95%98%EA%B8%B0-%EC%89%AC%EC%9A%B4-%EB%B6%80%EB%B6%84\">실수하기 쉬운 부분</a></li>\n</ul>\n</li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#q-life-of-rabbit-%EC%98%88%EC%8B%9C%EA%B0%80-recursion%EC%9D%98-%EB%8C%80%EB%B6%80%EB%B6%84\">Q. Life of Rabbit 예시가 Recursion의 대부분?</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#getelementsbyclassname-recursion\">getElementsByClassName Recursion</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#q-%EC%9E%AC%EA%B7%80%ED%95%A8%EC%88%98-%EB%B0%98%EB%B3%B5%EB%90%98%EB%8A%94-%EC%9D%B8%EC%9E%90-%EB%84%A4%EC%9D%B4%EB%B0%8D-%ED%8C%81\">Q. 재귀함수 반복되는 인자 네이밍 팁?</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%207%EC%A3%BC%EC%B0%A8%20%EC%88%98%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#etc\">ETC</a></li>\n</ul>","frontmatter":{"title":"바닐라코딩 Prep 7주차 수요일 오피스아워 정리","date":"November 18, 2020"}}},"pageContext":{"slug":"/2020/vanillacoding_prep/Prep 7주차 수요일 오피스아워 정리/","previous":{"fields":{"slug":"/2020/vanillacoding_prep/Prep 7주차 월요일 오피스아워 정리/"},"frontmatter":{"title":"바닐라코딩 Prep 7주차 월요일 오피스아워 정리","category":"vanilla coding","draft":false}},"next":{"fields":{"slug":"/2020/gatsby/내손내만-Gatsby로-블로그-만들기/2020-11-19-내손내만-Gatsby.js로-블로그-만들기---2-gatsby설치,-starter-고르기/"},"frontmatter":{"title":"내손내만 Gatsby.js로 블로그 만들기 - 2 gatsby설치, starter, meta data 설정","category":"gatsby","draft":false}}}}}
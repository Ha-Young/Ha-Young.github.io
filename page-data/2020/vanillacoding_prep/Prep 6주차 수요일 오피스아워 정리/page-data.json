{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/vanillacoding_prep/Prep 6주차 수요일 오피스아워 정리/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"937004b4-6559-5758-8e7d-10c19dd81ca6","excerpt":"Q. this Quiz 함수의 실행시점을 잘 보자. 함수의 실행시점은 11라인  dot notation을 통해서 넘겨지더라도 실행시점에서 dot notation이 없으면 일반함수 실행과 같다. 또한  의 인자로  과 같이 dot notation을 통해서 넘기더라도  는 그냥 해당  key값의 value 인  함수의 레퍼런스 값만 가져오기 때문에 speak객체와는 상관이 없어진다. 그래서 11라인의  에서 일반함수처럼 실행. something.speak…","html":"<h2 id=\"q-this-quiz\" style=\"position:relative;\"><a href=\"#q-this-quiz\" aria-label=\"q this quiz permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. this Quiz</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> something <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">speak</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> butler <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">serve</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nbutler<span class=\"token punctuation\">.</span><span class=\"token function\">serve</span><span class=\"token punctuation\">(</span>something<span class=\"token punctuation\">.</span>speak<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>함수의 실행시점을 잘 보자.</p>\n<p>함수의 실행시점은 11라인 <code class=\"language-text\">cb()</code></p>\n<p>dot notation을 통해서 넘겨지더라도 실행시점에서 dot notation이 없으면 일반함수 실행과 같다.</p>\n<p>또한 <code class=\"language-text\">butler.serve()</code> 의 인자로<code class=\"language-text\">something.speak</code>  과 같이 dot notation을 통해서 넘기더라도 <code class=\"language-text\">something.speak</code> 는 그냥 해당 <code class=\"language-text\">speak</code> key값의 value 인 </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수의 레퍼런스 값만 가져오기 때문에 speak객체와는 상관이 없어진다.</p>\n<p>그래서 11라인의 <code class=\"language-text\">cb()</code> 에서 일반함수처럼 실행.</p>\n<h3 id=\"somethingspeak를-인자로-준다면\" style=\"position:relative;\"><a href=\"#somethingspeak%EB%A5%BC-%EC%9D%B8%EC%9E%90%EB%A1%9C-%EC%A4%80%EB%8B%A4%EB%A9%B4\" aria-label=\"somethingspeak를 인자로 준다면 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>something.speak()를 인자로 준다면?</h3>\n<p>이 경우에는 <code class=\"language-text\">something.speak()</code> 로 함수를 실행시켰으므로 해당 함수의 <code class=\"language-text\">return</code> 값, 즉 반환값이 인자로 들어가게 될 것이다.</p>\n<p><code class=\"language-text\">something.speak()</code> 함수는 리턴값이 없으므로 <code class=\"language-text\">undefined</code>가 리턴되어 인자값으로 전달 된다.</p>\n<h3 id=\"어떤-함수의-reference를-가지고-있다면-무조건-일반함수실행인지\" style=\"position:relative;\"><a href=\"#%EC%96%B4%EB%96%A4-%ED%95%A8%EC%88%98%EC%9D%98-reference%EB%A5%BC-%EA%B0%80%EC%A7%80%EA%B3%A0-%EC%9E%88%EB%8B%A4%EB%A9%B4-%EB%AC%B4%EC%A1%B0%EA%B1%B4-%EC%9D%BC%EB%B0%98%ED%95%A8%EC%88%98%EC%8B%A4%ED%96%89%EC%9D%B8%EC%A7%80\" aria-label=\"어떤 함수의 reference를 가지고 있다면 무조건 일반함수실행인지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>어떤 함수의 reference를 가지고 있다면, 무조건 일반함수실행인지?</h3>\n<p>아니다 다음과 같은 경우가 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> something <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">speak</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token function\">foo</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> something2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n    speak<span class=\"token operator\">:</span> something<span class=\"token punctuation\">.</span>speak <span class=\"token comment\">// something 객체의 speak 메서드 레퍼런스값</span>\n<span class=\"token punctuation\">}</span>\n\nsomething2<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 20</span></code></pre></div>\n<p>다음과 같은 경우에는 함수 실행 위치는 <code class=\"language-text\">something2.speak</code> 이므로 함수내부에서  something2 객체가 this가 된다. </p>\n<p><code class=\"language-text\">something.speak</code>함수의 레퍼런스값으로 참조하지만, 호출은 <code class=\"language-text\">something2</code>객체에서 했으므로.</p>\n<h2 id=\"생성자-함수\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자 함수</h2>\n<ul>\n<li>new 키워드를 사용한다</li>\n<li><strong>대문자 표기</strong>로 구분을 쉽게 한다</li>\n<li><strong>인스턴스 생성</strong> (빈 객체)</li>\n<li>함수 내부에서 <strong>this가 빈 객체로 만들어진 인스턴스</strong>로 작용</li>\n<li>객체 return 문이 없다면 <strong>this 인스턴스 자동 반환</strong></li>\n</ul>\n<h3 id=\"우리가-알고있는-생성자-함수\" style=\"position:relative;\"><a href=\"#%EC%9A%B0%EB%A6%AC%EA%B0%80-%EC%95%8C%EA%B3%A0%EC%9E%88%EB%8A%94-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98\" aria-label=\"우리가 알고있는 생성자 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>우리가 알고있는 생성자 함수</h3>\n<ul>\n<li>new Array();</li>\n<li>new Object();</li>\n<li>new Number();</li>\n<li>등등…</li>\n</ul>\n<h2 id=\"프로토타입\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85\" aria-label=\"프로토타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로토타입</h2>\n<p><code class=\"language-text\">prototype</code>을 잘 알게되면 ES2015에서 나오는 <code class=\"language-text\">class</code>를 쉽게 알 수 있다.</p>\n<h3 id=\"quiz\" style=\"position:relative;\"><a href=\"#quiz\" aria-label=\"quiz permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quiz.</h3>\n<p>풀어봅시다</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Smartphone</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>provider <span class=\"token operator\">=</span> provider<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> gx20 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Smartphone</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gallaxyS20\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"samsung\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngx20<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ?</span>\n\n<span class=\"token class-name\">Smartphone</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">start</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>provider<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is starting...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Smartphone</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>provider <span class=\"token operator\">=</span> provider<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> gx20 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Smartphone</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gallaxyS20\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"samsung\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">start</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>provider<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> is starting...</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngx20<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ?</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Smartphone</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name<span class=\"token punctuation\">,</span> provider<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>provider <span class=\"token operator\">=</span> provider<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> gx20 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Smartphone</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gallaxyS20\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"samsung\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Smartphone</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">===</span> gx20<span class=\"token punctuation\">.</span>__proto__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ?</span></code></pre></div>\n<p><code class=\"language-text\">__proto__ (dunder proto)</code> 가 무엇인지만 알고, <strong>사용은 하지 말자.</strong></p>\n<blockquote>\n<p><code class=\"language-text\">__proto__</code>는 모질라에서 베타버전? 실험적인 기능으로 내보냈는데, 실험용으로 내보냈지만, javascript 개발자들이 사용해버려서 없애지 못하고 있다.</p>\n<p>standard한 기능이 아니다.</p>\n</blockquote>\n<h2 id=\"상속\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D\" aria-label=\"상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속</h2>\n<p>이해가 지금 잘 안될 수 있다.</p>\n<p><strong>바로 이해 안해도 되니, 시간을 두고 이해하자.</strong> (5개월?)</p>\n<p>주기적으로 계속해서 본다면 자동적으로 습득하게 될 것.</p>\n<h3 id=\"상속-시키는-방법\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%86%8D-%EC%8B%9C%ED%82%A4%EB%8A%94-%EB%B0%A9%EB%B2%95\" aria-label=\"상속 시키는 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상속 시키는 방법</h3>\n<ol>\n<li>자식 객체 생성자 함수에서 부모 객체 생성자함수를 호출하는데, 호출할 때 this를 바인딩 시켜서 호출해야 한다. </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ToDo</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">parent_method</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parent's prototype method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 상속</span>\n    <span class=\"token function\">Parent</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1번.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>자식 객체에 부모 프로토타입 연결 (프로토타입 체인 형성)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">Object.create()</code> 는 빈 객체를 반환하지만, 인자값으로 받은 객체가 있다면 인자값으로 받은 객체를 prototype으로 갖는 빈 객체를 반환한다. (인자로 받은 객체를 <code class=\"language-text\">__proto__</code> 로 가르키는 빈 객체 리턴) </p>\n<ol start=\"3\">\n<li>\n<p>자식객체에 빈 객체로 만들어진 prototype에 <code class=\"language-text\">constructor</code> 를 자식객체를 가르키도록 해야 한다.</p>\n<blockquote>\n<p>빈 객체이기 때문에 prototype객체가 기본적으로 가지는 constructor 속성이 없음. 그래서 부모객체 prototype의 constructor를 참조하게 된다. 이를 자식객체로 바꿔줘야됨.</p>\n</blockquote>\n</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Child<span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>그리고 반드시 2번 이후에 자식 객체 protype에 할당을 진행해야 된다.</strong> 새로 생성된 prototype객체에서 할당을 해야 되기 때문.</p>\n<p>아니면 다시 새로 생성되기 때문에 이전에 할당한 prperty나 method는 사라진다.</p>\n<h4 id=\"전체-코드\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\" aria-label=\"전체 코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">Parent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isParent <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">parent_method</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"parent's prototype method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 상속</span>\n    <span class=\"token function\">Parent</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//1번.</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>isChild <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Parent</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>constructor <span class=\"token operator\">=</span> Child<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 이후에 Child prototype 할당작업</span>\n<span class=\"token class-name\">Child</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">method2</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"child's prototype method\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> child <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Child</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nchild<span class=\"token punctuation\">.</span><span class=\"token function\">method1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// parent's prototype method</span>\nchild<span class=\"token punctuation\">.</span><span class=\"token function\">method2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// child's prototype method</span></code></pre></div>\n<h3 id=\"q-3번-처럼-constructor-할당-안해주면-undefined\" style=\"position:relative;\"><a href=\"#q-3%EB%B2%88-%EC%B2%98%EB%9F%BC-constructor-%ED%95%A0%EB%8B%B9-%EC%95%88%ED%95%B4%EC%A3%BC%EB%A9%B4-undefined\" aria-label=\"q 3번 처럼 constructor 할당 안해주면 undefined permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 3번 처럼 constructor 할당 안해주면 undefined?</h3>\n<p><code class=\"language-text\">Child.prototype.constructor === undefined</code> ?</p>\n<p>아니다. 2번에서 자식 객체의 prototype으로 부모 객체의 prototype이 설정되었으므로 prototype 체인을 통해서  부모객체의 prototype에 있는 constructor를 가져오게 된다.</p>\n<p>그래서 <strong>결과는</strong>\n<strong>부모객체 prototype의 constructor</strong></p>\n<h3 id=\"q-생성자-함수에서-2-3번\" style=\"position:relative;\"><a href=\"#q-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C-2-3%EB%B2%88\" aria-label=\"q 생성자 함수에서 2 3번 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 생성자 함수에서 2, 3번?</h3>\n<p>이렇게 하면 제대로 작동 X.</p>\n<p>상속이 제대로 이루어지지 않는다.</p>\n<p>그리고 이와 같은 방법으로 할 경우, 생성자함수로 해당 객체 인스턴스를 만들 때 마다 새로 prototype 을 새로 만들어서 prototype 체인을 형성하는 것이므로 올바르지 않다.</p>\n<h3 id=\"mdn에서-자주보이던-arrayprototype\" style=\"position:relative;\"><a href=\"#mdn%EC%97%90%EC%84%9C-%EC%9E%90%EC%A3%BC%EB%B3%B4%EC%9D%B4%EB%8D%98-arrayprototype\" aria-label=\"mdn에서 자주보이던 arrayprototype permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MDN에서 자주보이던 Array.prototype.~</h3>\n<p>이제 이해 할 수 있어야 한다.</p>\n<p>Array 객체 prototype에 존재하는 메서드들.</p>\n<p>Array 생성자함수를 통해 만들어진 Array들에 해당 메서드들을 사용할 수 있는 것.</p>\n<blockquote>\n<p>그렇다면 <code class=\"language-text\">[]</code> 배열 리터럴이 내부적으로 Array 생성자함수를 사용한다는 걸 알 수 있다.</p>\n</blockquote>\n<h2 id=\"q-간혹-브라우저-console에서-코딩시에-브라우저별로-다르게-작동-하는데\" style=\"position:relative;\"><a href=\"#q-%EA%B0%84%ED%98%B9-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80-console%EC%97%90%EC%84%9C-%EC%BD%94%EB%94%A9%EC%8B%9C%EC%97%90-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%80%EB%B3%84%EB%A1%9C-%EB%8B%A4%EB%A5%B4%EA%B2%8C-%EC%9E%91%EB%8F%99-%ED%95%98%EB%8A%94%EB%8D%B0\" aria-label=\"q 간혹 브라우저 console에서 코딩시에 브라우저별로 다르게 작동 하는데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 간혹 브라우저 console에서 코딩시에 브라우저별로 다르게 작동 하는데?</h2>\n<p>브라우저 별로 console의 결과값이 다르게 나올때가 있는데, 이는 브라우저별로 작동하는 방식이 조금씩 다를 수 있기 때문.</p>\n<p>브라우저별로 그렇게 만들어졌고 설계되었기 때문에 그렇게 알고 넘어가자.</p>\n<h2 id=\"q-protype과-함께-class-constrouctor-문법도-알아야-될까\" style=\"position:relative;\"><a href=\"#q-protype%EA%B3%BC-%ED%95%A8%EA%BB%98-class-constrouctor-%EB%AC%B8%EB%B2%95%EB%8F%84-%EC%95%8C%EC%95%84%EC%95%BC-%EB%90%A0%EA%B9%8C\" aria-label=\"q protype과 함께 class constrouctor 문법도 알아야 될까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. protype과 함께 class, constrouctor 문법도 알아야 될까?</h2>\n<p>지금 굳이 안 알아도 된다.</p>\n<h2 id=\"q-메서드는-prototype에-정의하고-property는-생성자함수에서-하는것이-관습일까요\" style=\"position:relative;\"><a href=\"#q-%EB%A9%94%EC%84%9C%EB%93%9C%EB%8A%94-prototype%EC%97%90-%EC%A0%95%EC%9D%98%ED%95%98%EA%B3%A0-property%EB%8A%94-%EC%83%9D%EC%84%B1%EC%9E%90%ED%95%A8%EC%88%98%EC%97%90%EC%84%9C-%ED%95%98%EB%8A%94%EA%B2%83%EC%9D%B4-%EA%B4%80%EC%8A%B5%EC%9D%BC%EA%B9%8C%EC%9A%94\" aria-label=\"q 메서드는 prototype에 정의하고 property는 생성자함수에서 하는것이 관습일까요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 메서드는 prototype에 정의하고, property는 생성자함수에서 하는것이 관습일까요?</h2>\n<p>그렇지는 않다.</p>\n<p>개념상으로 <strong>생성자 함수에 들어가는 property는 생성자 함수가 실행될 때 마다 생성</strong>되는 것들이고,</p>\n<p><strong>property에 선언된 property나 method는 공용으로 딱 한번만 생성되서 공유</strong>되는 것.</p>\n<p>그래서 지속적으로 새롭게 생성되는 것이냐, 아니면 하나만 생성해서 하나를 계속 공유하면서 쓰는것이냐 의 차이가 있다. 이는 또 상황에 맞게 써야 한다.</p>\n<h2 id=\"q-objectcreate-할-때-prototype이-생성되면서-빈객체에-할당되는지\" style=\"position:relative;\"><a href=\"#q-objectcreate-%ED%95%A0-%EB%95%8C-prototype%EC%9D%B4-%EC%83%9D%EC%84%B1%EB%90%98%EB%A9%B4%EC%84%9C-%EB%B9%88%EA%B0%9D%EC%B2%B4%EC%97%90-%ED%95%A0%EB%8B%B9%EB%90%98%EB%8A%94%EC%A7%80\" aria-label=\"q objectcreate 할 때 prototype이 생성되면서 빈객체에 할당되는지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. Object.create() 할 때 prototype이 생성되면서 빈객체에 할당되는지?</h2>\n<p>새로 만들어지는 것은 아니고, </p>\n<p>Object.create()로 새로 생성되는 빈 객체에 인자값으로 넘어온 객체를 dunder proto 로 설정한다고 보면 된다. (링크 설정)</p>\n<h2 id=\"q-어떠한-객체의-프로토타입이라는-표현\" style=\"position:relative;\"><a href=\"#q-%EC%96%B4%EB%96%A0%ED%95%9C-%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%B4%EB%9D%BC%EB%8A%94-%ED%91%9C%ED%98%84\" aria-label=\"q 어떠한 객체의 프로토타입이라는 표현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q. 어떠한 객체의 프로토타입이라는 표현?</h2>\n<p>엄밀히 말하면 이는 잘못된 표현.</p>\n<p>함수가 프로토타입 속성을 가지고 있는 것이지만,</p>\n<p>일반적으로는 어떠한 객체의 프로토타입이라고 하면, 어떠한 객체의 생성자 함수의 프로토타입이라고 받아들여서 쓴다.</p>\n<h2 id=\"etc\" style=\"position:relative;\"><a href=\"#etc\" aria-label=\"etc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ETC</h2>\n<ul>\n<li>\n<p>부트캠프 1차 프로젝트는 팀별로 한다.</p>\n<ul>\n<li>1차 프로젝트.</li>\n<li>2차 프로젝트는 솔로.</li>\n<li>팀은 2~3명</li>\n</ul>\n</li>\n<li>\n<p>이번주 금요일은 과제(Digital Clock) 대략 설명</p>\n<ul>\n<li>금요일 7시까지 MergeRequest 꼭!</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Prep 6주차 수요일 오피스아워 정리","date":"November 11, 2020"}}},"pageContext":{"slug":"/2020/vanillacoding_prep/Prep 6주차 수요일 오피스아워 정리/","previous":{"fields":{"slug":"/2020/vanillacoding_prep/Prep6주차월요일_오피스아워 정리/"},"frontmatter":{"title":"Prep 6주차 월요일 오피스아워 정리","category":"vanilla coding","draft":false}},"next":{"fields":{"slug":"/2020/vanillacoding_prep/Prep 6주차 금요일 오피스아워 정리/"},"frontmatter":{"title":"Prep 6주차 금요일 오피스아워 정리","category":"vanilla coding","draft":false}}}}}
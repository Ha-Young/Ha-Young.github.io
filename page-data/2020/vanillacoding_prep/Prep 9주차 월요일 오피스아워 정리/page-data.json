{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/vanillacoding_prep/Prep 9주차 월요일 오피스아워 정리/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"351b15ff-a49f-5582-9501-72381b3d712d","excerpt":"과제 리뷰 코멘트 early return 다음과 같은 분기중에서 한쪽은 길고 한쪽은 짧을 때 혹은 if else문을 통한 예외처리를   처리하면 좋다. 이렇게 할 경우, 가독성이 좋아지고 효율이 좋아진다. 또  가독성이 좋아진다. indentation이 줄고, if else문을 다 안봐도 된다. if, else 문에 대해 다 보지 않기 때문에 효율성이 있다. 예외처리를 처리하면 한 코드가 되어서 빠른 예외처리로 불필요한 로직수행이 없어진다. callback 함수에 bind…","html":"<h2 id=\"과제-리뷰-코멘트\" style=\"position:relative;\"><a href=\"#%EA%B3%BC%EC%A0%9C-%EB%A6%AC%EB%B7%B0-%EC%BD%94%EB%A9%98%ED%8A%B8\" aria-label=\"과제 리뷰 코멘트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>과제 리뷰 코멘트</h2>\n<h3 id=\"early-return\" style=\"position:relative;\"><a href=\"#early-return\" aria-label=\"early return permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>early return</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isTrue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// A..</span>\n    <span class=\"token comment\">// B..</span>\n    <span class=\"token comment\">// C..</span>\n    <span class=\"token comment\">// D..</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"early return\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>다음과 같은 분기중에서 한쪽은 길고 한쪽은 짧을 때 혹은 if else문을 통한 예외처리를  <code class=\"language-text\">early return</code> 처리하면 좋다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">errorCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"fail fest\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isTrue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"early return\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// A..</span>\n<span class=\"token comment\">// B..</span>\n<span class=\"token comment\">// C..</span>\n<span class=\"token comment\">// D..</span></code></pre></div>\n<p>이렇게 할 경우, 가독성이 좋아지고 효율이 좋아진다.</p>\n<p>또 </p>\n<ul>\n<li>\n<p>가독성이 좋아진다.</p>\n<ul>\n<li>indentation이 줄고,</li>\n<li>if else문을 다 안봐도 된다.</li>\n</ul>\n</li>\n<li>if, else 문에 대해 다 보지 않기 때문에 효율성이 있다.</li>\n<li>예외처리를 <code class=\"language-text\">early return</code>처리하면 <strong><code class=\"language-text\">fail fest</code></strong>한 코드가 되어서 빠른 예외처리로 불필요한 로직수행이 없어진다.</li>\n</ul>\n<h3 id=\"callback-함수에-bind\" style=\"position:relative;\"><a href=\"#callback-%ED%95%A8%EC%88%98%EC%97%90-bind\" aria-label=\"callback 함수에 bind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>callback 함수에 bind</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> tasks<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    tasks<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token function\">callback</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>idx <span class=\"token operator\">:</span> i<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>이렇게 할 경우 작동도 되고 좋은 방법이지만, 최선의 방식은 아닌 것 같다.</p>\n<p>이렇게 this값을 고의로 설정하는 방법은 외부와 충돌이 일어날 수 있다.</p>\n<blockquote>\n<p>만약, callback 내부에서 this를 사용한다면?</p>\n</blockquote>\n<p><strong>하지만, bind를 통해 this를 넘기려고 한 생각은 좋았다.</strong></p>\n<h3 id=\"코드-스타일이나-디테일한-부분\" style=\"position:relative;\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%83%80%EC%9D%BC%EC%9D%B4%EB%82%98-%EB%94%94%ED%85%8C%EC%9D%BC%ED%95%9C-%EB%B6%80%EB%B6%84\" aria-label=\"코드 스타일이나 디테일한 부분 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 스타일이나 디테일한 부분</h3>\n<p>아직 많은사람들이 보완해야 된다.</p>\n<p>코드스타일, 변수 네이밍, 세미콜론, 들여쓰기, 커밋 메세지 등등</p>\n<blockquote>\n<p>부트캠프에 들어오시는 분들은 이제 이런 소소한부분들에 대해 잔소리가 있을 예정.</p>\n</blockquote>\n<h3 id=\"prep에서의-내용\" style=\"position:relative;\"><a href=\"#prep%EC%97%90%EC%84%9C%EC%9D%98-%EB%82%B4%EC%9A%A9\" aria-label=\"prep에서의 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prep에서의 내용</h3>\n<p>굉장이 중요한 자바스크립트 개념의 기초중의 기초!</p>\n<p>알기만 하는것보다 코드에 응용할 수 있어야 한다.</p>\n<p>안쓰게되면 까먹게될 수 있는데, 까먹지말고 주기적으로 계속 상기시키자!</p>\n<h4 id=\"gitlab을-통해-mr하는-과정\" style=\"position:relative;\"><a href=\"#gitlab%EC%9D%84-%ED%86%B5%ED%95%B4-mr%ED%95%98%EB%8A%94-%EA%B3%BC%EC%A0%95\" aria-label=\"gitlab을 통해 mr하는 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>gitlab을 통해 MR하는 과정</h4>\n<p>flow에 대해 잘 이해하자.</p>\n<p>거의 모든 회사에서 이렇게 한다.</p>\n<h2 id=\"promise\" style=\"position:relative;\"><a href=\"#promise\" aria-label=\"promise permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Promise</h2>\n<p>부트캠프 하는사람들은 굉장히 중요하니 자세히 알고 오자!</p>\n<p>간단하다고 생각할 수 있지만, 복잡하고 응용하기 까다롭다. </p>\n<p>실제 사용하는건 간단하게 끝날 수 있지만, 동작하는 세부 원리, 개념을 따져보면 어렵다.(<code class=\"language-text\">event loop</code>와 연관)</p>\n<p>Promise의 사용방법? 장점? 단점? 어떻게 동작하는지? 에 대해 조금이라도 익힐려고 노력하자. </p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#%EA%B3%BC%EC%A0%9C-%EB%A6%AC%EB%B7%B0-%EC%BD%94%EB%A9%98%ED%8A%B8\">과제 리뷰 코멘트</a></p>\n<ul>\n<li><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#early-return\">early return</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#callback-%ED%95%A8%EC%88%98%EC%97%90-bind\">callback 함수에 bind</a></li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#%EC%BD%94%EB%93%9C-%EC%8A%A4%ED%83%80%EC%9D%BC%EC%9D%B4%EB%82%98-%EB%94%94%ED%85%8C%EC%9D%BC%ED%95%9C-%EB%B6%80%EB%B6%84\">코드 스타일이나 디테일한 부분</a></li>\n<li>\n<p><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#prep%EC%97%90%EC%84%9C%EC%9D%98-%EB%82%B4%EC%9A%A9\">Prep에서의 내용</a></p>\n<ul>\n<li><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#gitlab%EC%9D%84-%ED%86%B5%ED%95%B4-mr%ED%95%98%EB%8A%94-%EA%B3%BC%EC%A0%95\">gitlab을 통해 MR하는 과정</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/2020/vanillacoding_prep/Prep%209%EC%A3%BC%EC%B0%A8%20%EC%9B%94%EC%9A%94%EC%9D%BC%20%EC%98%A4%ED%94%BC%EC%8A%A4%EC%95%84%EC%9B%8C%20%EC%A0%95%EB%A6%AC/#promise\">Promise</a></li>\n</ul>","frontmatter":{"title":"바닐라코딩 Prep 9주차 월요일 오피스아워 정리","date":"November 30, 2020"}}},"pageContext":{"slug":"/2020/vanillacoding_prep/Prep 9주차 월요일 오피스아워 정리/","previous":{"fields":{"slug":"/2020/vanillacoding_prep/Prep 8주차 수요일 오피스아워 정리/"},"frontmatter":{"title":"바닐라코딩 Prep 8주차 수요일 오피스아워 정리","category":"vanilla coding","draft":false}},"next":{"fields":{"slug":"/2020/vanillacoding_prep/Prep 9주차 수요일 오피스아워 정리/"},"frontmatter":{"title":"바닐라코딩 Prep 9주차 수요일 오피스아워 정리","category":"vanilla coding","draft":false}}}},"staticQueryHashes":["1402886152","145675779","3128451518"]}
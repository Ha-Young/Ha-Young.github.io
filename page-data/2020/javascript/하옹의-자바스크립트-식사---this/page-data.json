{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020/javascript/하옹의-자바스크립트-식사---this/","result":{"data":{"site":{"siteMetadata":{"title":"HaYoung's Log","author":"@Ha-Young","siteUrl":"https://ha-young.github.io","comment":{"utterances":"Ha-Young/my-blog"},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"0ddf9a52-4c46-5a4d-8ec6-e6a70cc77127","excerpt":"this? 모든 프로그래밍 언어를 통틀어서 코드를 보다보면 각 언어마다   키워드는 빼놓지 않고 나오는 것 같다. 그리고 모두 의 의미는 모두 생성된 객체 인스턴스의 의미를 가지고 있다. 근데, 대부분의 언어가 의 사용처가 제한적인것에 반해 Javascript에서는 이 는 아무곳에서나 쓸 수 있고 의미도 다양하게 쓰일 수 있다. 아래 코드를 보자. 이와같이 객체 인스턴스와 아무 상관없는 함수에서도 를 사용할 수 있으며 다른 대부분의 언어는 this…","html":"<h2 id=\"this\" style=\"position:relative;\"><a href=\"#this\" aria-label=\"this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this?</h2>\n<p>모든 프로그래밍 언어를 통틀어서 코드를 보다보면 각 언어마다  <code class=\"language-text\">this</code> 키워드는 빼놓지 않고 나오는 것 같다.</p>\n<p>그리고 모두 <code class=\"language-text\">this</code>의 의미는 모두 <strong>생성된 객체 인스턴스</strong>의 의미를 가지고 있다.</p>\n<p>근데, 대부분의 언어가 <code class=\"language-text\">this</code>의 사용처가 제한적인것에 반해 Javascript에서는 이 <code class=\"language-text\">this</code>는 아무곳에서나 쓸 수 있고 의미도 다양하게 쓰일 수 있다.</p>\n<p>아래 코드를 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">helloThis</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// </span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">helloThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Window 객체가 출력된다.</span></code></pre></div>\n<p>이와같이 객체 인스턴스와 아무 상관없는 함수에서도 <code class=\"language-text\">this</code>를 사용할 수 있으며</p>\n<blockquote>\n<p>다른 대부분의 언어는 this를 쓸 수 있는 상황이 제한적이다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> thisObj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    useThis<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// thisObj 객체 생성</span>\n\nthisObj<span class=\"token punctuation\">.</span>helloThis <span class=\"token operator\">=</span> helloThis<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 앞서 만든 helloThis함수를 속성으로 할당</span>\n\nthisObj<span class=\"token punctuation\">.</span><span class=\"token function\">helloThis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// thisObj 객체가 출력 { useThis: true, helloThis: f}</span></code></pre></div>\n<p>위 예제는 아까 만든 <code class=\"language-text\">helloThis</code>를 분명 재활용했음에도 불구하고 <code class=\"language-text\">thisObj</code>객체가 출력된다.</p>\n<p>모두 똑같은 함수인 <code class=\"language-text\">helloThis</code>를 사용했는데, 위 코드는 <code class=\"language-text\">window</code>(전역)객체, 아래코드는 <code class=\"language-text\">thisObj</code>객체로 결과가 각각 다르게 나온다. </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> cat <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    sound<span class=\"token operator\">:</span> <span class=\"token string\">'meow'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">speak</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sound<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> func <span class=\"token operator\">=</span> cat<span class=\"token punctuation\">.</span>speak<span class=\"token punctuation\">;</span> <span class=\"token comment\">// speak함수를 func에 할당</span>\n\ncat<span class=\"token punctuation\">.</span><span class=\"token function\">speak</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// meow</span>\n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n<p>여기에서도 분명 똑같은 <code class=\"language-text\">speak()</code> 함수를 사용했음에도 결과는 다르다.</p>\n<p>이와 같은 변화무쌍한 점이 사람들이 javascript의 <code class=\"language-text\">this</code>를 어렵게 생각하는 원인.</p>\n<h3 id=\"알고보면-쉬운-this\" style=\"position:relative;\"><a href=\"#%EC%95%8C%EA%B3%A0%EB%B3%B4%EB%A9%B4-%EC%89%AC%EC%9A%B4-this\" aria-label=\"알고보면 쉬운 this permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>알고보면 쉬운 this?</h3>\n<p>사실 javascript에서의 <code class=\"language-text\">this</code>가 쓰일 수 있는 곳과 어떤 의미를 가지는지는 굉장히 명확하게 정해져있다.</p>\n<p><code class=\"language-text\">this</code>가 무엇을 나타내고있는지 판단하려면 먼저 <code class=\"language-text\">this</code> 를 쓰는 <strong>함수가 사용되는 시점</strong>을 보면 판단할 수 있다.</p>\n<p>그리고 이 함수가 사용될 수 있는 시점은 4가지가 있다.</p>\n<p>이 말은 <code class=\"language-text\">this</code>가 나타낼 수 있는 경우의 수도 4가지라는 말.</p>\n<ul>\n<li>Regular Function Call</li>\n<li>Dot Notation (Object Method Call)</li>\n<li>Call, Apply, Bind</li>\n<li><code class=\"language-text\">new</code> keyword</li>\n</ul>\n<h2 id=\"this의-경우의-수\" style=\"position:relative;\"><a href=\"#this%EC%9D%98-%EA%B2%BD%EC%9A%B0%EC%9D%98-%EC%88%98\" aria-label=\"this의 경우의 수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>this의 경우의 수</h2>\n<h3 id=\"1-regular-function-call\" style=\"position:relative;\"><a href=\"#1-regular-function-call\" aria-label=\"1 regular function call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Regular Function Call</h3>\n<h3 id=\"2-dot-notation-object-method-call\" style=\"position:relative;\"><a href=\"#2-dot-notation-object-method-call\" aria-label=\"2 dot notation object method call permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Dot Notation (Object Method Call)</h3>\n<h3 id=\"3-call-apply-bind\" style=\"position:relative;\"><a href=\"#3-call-apply-bind\" aria-label=\"3 call apply bind permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Call, Apply, Bind</h3>\n<h3 id=\"4-code-classlanguage-textnewcode-keyword\" style=\"position:relative;\"><a href=\"#4-code-classlanguage-textnewcode-keyword\" aria-label=\"4 code classlanguage textnewcode keyword permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. <code class=\"language-text\">new</code> keyword</h3>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#this\">this?</a></p>\n<ul>\n<li><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#%EC%95%8C%EA%B3%A0%EB%B3%B4%EB%A9%B4-%EC%89%AC%EC%9A%B4-this\">알고보면 쉬운 this?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#this%EC%9D%98-%EA%B2%BD%EC%9A%B0%EC%9D%98-%EC%88%98\">this의 경우의 수</a></p>\n<ul>\n<li><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#1-regular-function-call\">1. Regular Function Call</a></li>\n<li><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#2-dot-notation-object-method-call\">2. Dot Notation (Object Method Call)</a></li>\n<li><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#3-call-apply-bind\">3. Call, Apply, Bind</a></li>\n<li><a href=\"/2020/javascript/%ED%95%98%EC%98%B9%EC%9D%98-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%8B%9D%EC%82%AC---this/#4-code-classlanguage-textnewcode-keyword\">4. <code class=\"language-text\">new</code> keyword</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"하옹의 자바스크립트 식사 - this","date":"January 13, 2021"}}},"pageContext":{"slug":"/2020/javascript/하옹의-자바스크립트-식사---this/","previous":{"fields":{"slug":"/2020/javascript/하옹의-자바스크립트-간편식---Prototype/하옹의-자바스크립트-식사---Prototype/"},"frontmatter":{"title":"하옹의 자바스크립트 식사 - Prototype","category":"javascript","draft":false}},"next":null}}}
{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/blog.js"],"names":["Content","NavLink","Link","GitHubLink","HomeLink","SiteHeader","Header","siteTitle","to","href","defaultProps","GatsbyLink","Footer","Layout","children","query","render","data","site","siteMetadata","title","Date","getFullYear","PostBlock","ArticleDate","MarkerHeader","ReadingTime","IndexPage","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","map","key","id","path","css","date","fields","readingTime","text","excerpt"],"mappings":"6LAKMA,EAAO,2HAMPC,EAAU,YAAOC,OAAP,sBAAH,0YA0BPC,EAAU,gbA0BVC,EAAW,YAAOH,EAAP,sBAAH,yCAIRI,EAAU,qLASVC,EAAS,SAAC,GAAD,EAAGC,UAAH,OACb,YAACF,EAAD,KACE,YAACL,EAAD,KACE,qBACE,YAACI,EAAD,CAAUI,GAAG,KAAb,QACA,YAACP,EAAD,CAASO,GAAG,SAAZ,QACA,YAACL,EAAD,CAAYM,KAAK,+BAAjB,cAURH,EAAOI,aAAe,CACpBH,UAAU,IAGGD,QCjFTN,G,UAAO,0IAOPW,EAAU,wIAOVC,EAAM,iJA2CGC,IAjCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,YAAC,cAAD,CACEC,MAAK,aASLC,OAAQ,SAACC,GAAD,OACN,8BACE,YAAC,EAAD,CAAQV,UAAWU,EAAKC,KAAKC,aAAaC,QAC1C,YAAC,EAAD,KACE,wBAAON,GACP,YAACF,EAAD,KACE,2BACK,IAAIS,MAAOC,cADhB,oBAIA,YAACX,EAAD,CAAYF,KAAK,4BAAjB,cApBV,W,mQChCIT,EAAO,2HAMPuB,EAAS,sNAYTC,EAAW,+FAKXC,EAAY,gOAWZC,EAAW,+F,+DAwCFC,UAnCG,SAAC,GAAc,IAAZV,EAAW,EAAXA,KACnB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKG,MAAM,SACX,YAACpB,EAAD,KACE,8BACCiB,EAAKW,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADc,EAAXC,KACYC,YAAYF,QAEjC,OADa,IAAIV,KAAKU,GACR,IAAIV,QAEnBa,KAAI,gBAAGF,EAAH,EAAGA,KAAH,OACH,YAACT,EAAD,CAAWY,IAAKH,EAAKI,IACnB,YAAC,OAAD,CACE5B,GAAIwB,EAAKC,YAAYI,KACrBC,IAAG,GAKH,YAACb,EAAD,KAAeO,EAAKC,YAAYb,MAAhC,KACA,uBACE,YAACI,EAAD,KAAcQ,EAAKC,YAAYM,MAC/B,YAACb,EAAD,WAAiBM,EAAKQ,OAAOC,YAAYC,OAE3C,qBAAIV,EAAKW,iBAWlB,IAAM5B,EAAK","file":"component---src-pages-blog-js-7ea030340289376cf765.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Content = styled.div`\r\n  max-width: 860px;\r\n  padding: 1rem 1.0875rem;\r\n  font-size: 1.2rem;\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  color: black;\r\n  margin-left: 15px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    transform: scaleX(0);\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    transform-origin: bottom right;\r\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n\r\n  :hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n  }\r\n`\r\n\r\nconst GitHubLink = styled.a`\r\n  color: black;\r\n  margin-left: 15px;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  position: relative;\r\n\r\n  ::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100%;\r\n    transform: scaleX(0);\r\n    height: 2px;\r\n    bottom: 0;\r\n    left: 0;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    transform-origin: bottom right;\r\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\r\n  }\r\n\r\n  :hover::after {\r\n    transform: scaleX(1);\r\n    transform-origin: bottom left;\r\n  }\r\n`\r\n\r\nconst HomeLink = styled(NavLink)`\r\n  margin-left: 0;\r\n`\r\n\r\nconst SiteHeader = styled.header`\r\n  background: transparent;\r\n  display: flex;\r\n  align-content: center;\r\n  justify-content: center;\r\n\r\n  font-family: \"Raleway\", cursive;\r\n`\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <SiteHeader>\r\n    <Content>\r\n      <p>\r\n        <HomeLink to=\"/\">Home</HomeLink>\r\n        <NavLink to=\"/blog\">Blog</NavLink>\r\n        <GitHubLink href=\"https://github.com/Ha-Young\">GitHub</GitHubLink>\r\n      </p>\r\n    </Content>\r\n  </SiteHeader>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's StaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { StaticQuery, graphql } from \"gatsby\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\nconst Content = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 860px;\r\n  padding: 0 1.0875rem 1rem;\r\n  padding-top: 0;\r\n`\r\n\r\nconst GatsbyLink = styled.a`\r\n  margin-left: 5px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  p {\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={(data) => (\r\n      <>\r\n        <Header siteTitle={data.site.siteMetadata.title} />\r\n        <Content>\r\n          <main>{children}</main>\r\n          <Footer>\r\n            <p>\r\n              Â© {new Date().getFullYear()}, Built with\r\n              {` `}\r\n            </p>\r\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\r\n          </Footer>\r\n        </Content>\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { css } from \"@emotion/core\"\r\nimport styled from \"@emotion/styled\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Content = styled.div`\r\n  margin: 0 auto;\r\n  max-width: 860px;\r\n  padding: 1.45rem 1.0875rem;\r\n`\r\n\r\nconst PostBlock = styled.div`\r\n  margin: 1em 0em;\r\n  padding: 1em;\r\n  border-radius: 1em;\r\n  border: 1px solid white;\r\n  transition: all 0.7s;\r\n  &:hover {\r\n    background-color: #f2f0d5;\r\n    border: 1px dashed black;\r\n  }\r\n`\r\n\r\nconst ArticleDate = styled.h5`\r\n  display: inline;\r\n  color: #606060;\r\n`\r\n\r\nconst MarkerHeader = styled.h3`\r\n  display: inline;\r\n  border-radius: 1em 0 1em 0;\r\n  background-image: linear-gradient(\r\n    -100deg,\r\n    rgba(244, 243, 232, 0.15),\r\n    rgba(244, 243, 232, 0.8) 100%,\r\n    rgba(244, 243, 232, 0.25)\r\n  );\r\n`\r\n\r\nconst ReadingTime = styled.h5`\r\n  display: inline;\r\n  color: #606060;\r\n`\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Blog\" />\r\n      <Content>\r\n        <h1>Blog</h1>\r\n        {data.allMarkdownRemark.edges\r\n          .filter(({ node }) => {\r\n            const rawDate = node.frontmatter.rawDate\r\n            const date = new Date(rawDate)\r\n            return date < new Date()\r\n          })\r\n          .map(({ node }) => (\r\n            <PostBlock key={node.id}>\r\n              <Link\r\n                to={node.frontmatter.path}\r\n                css={css`\r\n                  text-decoration: none;\r\n                  color: inherit;\r\n                `}\r\n              >\r\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\r\n                <div>\r\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\r\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\r\n                </div>\r\n                <p>{node.excerpt}</p>\r\n              </Link>\r\n            </PostBlock>\r\n          ))}\r\n      </Content>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const query = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { draft: { eq: false } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            rawDate: date\r\n            path\r\n          }\r\n          fields {\r\n            slug\r\n            readingTime {\r\n              text\r\n            }\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}
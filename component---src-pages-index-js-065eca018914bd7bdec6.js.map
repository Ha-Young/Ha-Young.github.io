{"version":3,"sources":["webpack:///./src/components/landing-bio/index.jsx","webpack:///./src/pages/index.js","webpack:///./src/hooks/useIntersectionObserver.js","webpack:///./src/utils/visible.js"],"names":["landingBioQuery","LandingBio","query","render","data","site","siteMetadata","title","author","introduction","social","profileImg","childImageSharp","fixed","className","to","alt","imgStyle","borderRadius","indexQuery","IndexPage","location","useIntersectionObserver","HOME_TITLE","keywords","useEffect","IOManager","observer","TARGET_CLASS","observeCallback","entries","filter","isIntersecting","forEach","target","Dom","observerTargeting","el","observe","disconnect","Error","Promise","resolve","init","IntersectionObserver","root","rootMargin","threshold","destroy","then","refreshObserver"],"mappings":"8QAqDMA,G,UAAe,aAyBNC,EAxEW,kBACxB,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IAAD,EACkCA,EAAKC,KAAKC,aAAlDC,EADM,EACNA,MAAOC,EADD,EACCA,OAAgBC,GADjB,EACSC,OADT,EACiBD,cAChBE,EAAeP,EAAKO,WAAWC,gBAAtCC,MAER,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,sBACb,kBAAC,OAAD,CAAMC,GAAG,UACP,kBAAC,IAAD,CACED,UAAU,eACVD,MAAOF,EACPK,IAAKR,EACLS,SAAU,CACRC,aAAa,UAInB,wBAAIJ,UAAU,cAAcP,GAC5B,uBAAGO,UAAU,gBAAgBL,MApBvC,U,wBCgBWU,GAFEC,UAbG,SAAC,GAAwB,IAAtBhB,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SACjBf,EAAiBF,EAAKC,KAAtBC,aAIR,OAFAgB,cAGE,kBAAC,IAAD,CAAQD,SAAUA,EAAUd,MAAOD,EAAaC,OAC9C,kBAAC,IAAD,CAAKA,MAAOgB,IAAYC,SAAUlB,EAAakB,WAC/C,kBAAC,EAAD,QAOiB,e,kCCvBvB,8DAGO,SAASF,IACdG,qBAAU,WAER,OADAC,MACO,WACLA,SAED,IAEHD,qBAAU,WACRC,W,mgFCJAC,E,YALSC,EAAe,WAO5B,SAASC,EAAgBC,GACvB,OAAOA,EACJC,QAAO,qBAAGC,kBACVC,SAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgBC,IAAaD,EATV,cAYhC,SAASE,IACP,OAAOD,IAAA,IAAoBP,GAAgBK,SAAQ,SAAAI,GAAE,OAAIV,EAASW,QAAQD,MAG5E,SAASE,IACP,IAAKZ,EACH,MAAMa,MAAM,2CAEd,OAAOC,QAAQC,QAAQf,EAASY,cAG3B,SAASI,IAOd,OANAhB,EAAW,IAAIiB,qBAAqBf,EAAiB,CACnDgB,KAAMV,IA3BM,cA4BZW,WAzBsC,OA0BtCC,UAzBoC,KA4B/BX,IAGF,SAASY,IACd,OAAOT,IAAaU,MAAK,kBAAOtB,EAAW,QAGtC,SAASuB,IACd,OAAOX,IAAaU,KAAKb","file":"component---src-pages-index-js-065eca018914bd7bdec6.js","sourcesContent":["import React from 'react'\r\nimport { StaticQuery, graphql, Link } from 'gatsby'\r\nimport Image from 'gatsby-image'\r\n\r\nimport './index.scss'\r\n\r\nexport const LandingBio = () => (\r\n  <StaticQuery\r\n    query={landingBioQuery}\r\n    render={data => {\r\n      const { title, author, social, introduction } = data.site.siteMetadata\r\n      const { fixed: profileImg } = data.profileImg.childImageSharp\r\n\r\n      return (\r\n        <div className=\"landingBio\">\r\n          <div className=\"landingBio-wrapper\">\r\n            <Link to=\"/about\">\r\n              <Image\r\n                className=\"author-image\"\r\n                fixed={profileImg}\r\n                alt={author}\r\n                imgStyle={{\r\n                  borderRadius: `50%`,\r\n                }}\r\n              />\r\n            </Link>\r\n            <h1 className=\"nameHeader\">{title}</h1>\r\n            <p className=\"introduction\">{introduction}</p>\r\n            {/* <p className=\"author-socials\">\r\n              {social.github && (\r\n                <a href={`https://github.com/${social.github}`}>GitHub</a>\r\n              )}\r\n              {social.medium && (\r\n                <a href={`https://medium.com/${social.medium}`}>Medium</a>\r\n              )}\r\n              {social.facebook && (\r\n                <a href={`https://www.facebook.com/${social.facebook}`}>\r\n                  Facebook\r\n                </a>\r\n              )}\r\n              {social.linkedin && (\r\n                <a href={`https://www.linkedin.com/in/${social.linkedin}/`}>\r\n                  LinkedIn\r\n                </a>\r\n              )}\r\n            </p> */}\r\n          </div>\r\n        </div>\r\n      )\r\n    }}\r\n  />\r\n)\r\n\r\nconst landingBioQuery = graphql`\r\n  query landingBioQuery {\r\n    profileImg: file(absolutePath: { regex: \"/profile.png/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 125, height: 125) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        introduction\r\n        social {\r\n          github\r\n          medium\r\n          facebook\r\n          linkedin\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default LandingBio\r\n","import React from 'react'\r\n\r\nimport { Layout } from '../layout'\r\nimport { SEO } from '../components/seo'\r\nimport LandingBio from '../components/landing-bio'\r\nimport { HOME_TITLE } from '../constants/meta'\r\nimport { useIntersectionObserver } from '../hooks/useIntersectionObserver'\r\n\r\nconst IndexPage = ({ data, location }) => {\r\n  const { siteMetadata } = data.site\r\n\r\n  useIntersectionObserver()\r\n\r\n  return (\r\n    <Layout location={location} title={siteMetadata.title}>\r\n      <SEO title={HOME_TITLE} keywords={siteMetadata.keywords} />\r\n      <LandingBio />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const indexQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        keywords\r\n      }\r\n    }\r\n  }\r\n`\r\n","import { useEffect } from 'react'\r\nimport * as IOManager from '../utils/visible'\r\n\r\nexport function useIntersectionObserver() {\r\n  useEffect(() => {\r\n    IOManager.init()\r\n    return () => {\r\n      IOManager.destroy()\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    IOManager.refreshObserver()\r\n  })\r\n}\r\n","import * as Dom from './dom'\r\n\r\nconst ROOT_ID = '#___gatsby'\r\nexport const TARGET_CLASS = 'observed'\r\nconst VISIBLE_RECOGNIZE_CLASS = 'visible'\r\nconst INTERSECTION_OBSERVER_ROOT_MARGIN = '20px'\r\nconst INTERSECTION_OBSERVER_THRESHOLD = 0.8\r\n\r\nlet observer\r\n\r\nfunction observeCallback(entries) {\r\n  return entries\r\n    .filter(({ isIntersecting }) => isIntersecting)\r\n    .forEach(({ target }) => Dom.addClass(target, VISIBLE_RECOGNIZE_CLASS))\r\n}\r\n\r\nfunction observerTargeting() {\r\n  return Dom.getElements(`.${TARGET_CLASS}`).forEach(el => observer.observe(el))\r\n}\r\n\r\nfunction disconnect() {\r\n  if (!observer) {\r\n    throw Error('Not found IntersectionObserver instance')\r\n  }\r\n  return Promise.resolve(observer.disconnect())\r\n}\r\n\r\nexport function init() {\r\n  observer = new IntersectionObserver(observeCallback, {\r\n    root: Dom.getElement(ROOT_ID),\r\n    rootMargin: INTERSECTION_OBSERVER_ROOT_MARGIN,\r\n    threshold: INTERSECTION_OBSERVER_THRESHOLD,\r\n  })\r\n\r\n  return observerTargeting()\r\n}\r\n\r\nexport function destroy() {\r\n  return disconnect().then(() => (observer = null))\r\n}\r\n\r\nexport function refreshObserver() {\r\n  return disconnect().then(observerTargeting)\r\n}\r\n"],"sourceRoot":""}
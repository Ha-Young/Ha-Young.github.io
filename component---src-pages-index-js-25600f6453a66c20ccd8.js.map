{"version":3,"sources":["webpack:///./src/components/landing-bio/index.jsx","webpack:///./src/pages/index.js","webpack:///./src/hooks/useIntersectionObserver.js","webpack:///./src/utils/visible.js"],"names":["landingBioQuery","LandingBio","query","render","data","site","siteMetadata","title","author","introduction","social","profileImg","childImageSharp","fixed","className","to","alt","imgStyle","borderRadius","indexQuery","IndexPage","location","useIntersectionObserver","HOME_TITLE","keywords","useEffect","IOManager","observer","TARGET_CLASS","observeCallback","entries","filter","isIntersecting","forEach","target","Dom","observerTargeting","el","observe","disconnect","Error","Promise","resolve","init","IntersectionObserver","root","rootMargin","threshold","destroy","then","refreshObserver"],"mappings":"8QAqDMA,G,UAAe,aAyBNC,EAxEW,kBACxB,kBAAC,cAAD,CACEC,MAAOF,EACPG,OAAQ,SAAAC,GAAS,IAAD,EACkCA,EAAKC,KAAKC,aAAlDC,EADM,EACNA,MAAOC,EADD,EACCA,OAAgBC,GADjB,EACSC,OADT,EACiBD,cAChBE,EAAeP,EAAKO,WAAWC,gBAAtCC,MAER,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,sBACb,kBAAC,OAAD,CAAMC,GAAG,UACP,kBAAC,IAAD,CACED,UAAU,eACVD,MAAOF,EACPK,IAAKR,EACLS,SAAU,CACRC,aAAa,UAInB,wBAAIJ,UAAU,cAAcP,GAC5B,uBAAGO,UAAU,gBAAgBL,MApBvC,U,wBCgBWU,GAFEC,UAbG,SAAC,GAAwB,IAAtBhB,EAAqB,EAArBA,KAAMiB,EAAe,EAAfA,SACjBf,EAAiBF,EAAKC,KAAtBC,aAIR,OAFAgB,cAGE,kBAAC,IAAD,CAAQD,SAAUA,EAAUd,MAAOD,EAAaC,OAC9C,kBAAC,IAAD,CAAKA,MAAOgB,IAAYC,SAAUlB,EAAakB,WAC/C,kBAAC,EAAD,QAOiB,e,kCCvBvB,8DAGO,SAASF,IACdG,qBAAU,WAER,OADAC,MACO,WACLA,SAED,IAEHD,qBAAU,WACRC,W,67ECJAC,E,YALSC,EAAe,WAO5B,SAASC,EAAgBC,GACvB,OAAOA,EACJC,QAAO,qBAAGC,kBACVC,SAAQ,gBAAGC,EAAH,EAAGA,OAAH,OAAgBC,IAAaD,EATV,cAYhC,SAASE,IACP,OAAOD,IAAA,IAAoBP,GAAgBK,SAAQ,SAAAI,GAAE,OAAIV,EAASW,QAAQD,MAG5E,SAASE,IACP,IAAKZ,EACH,MAAMa,MAAM,2CAEd,OAAOC,QAAQC,QAAQf,EAASY,cAG3B,SAASI,IAOd,OANAhB,EAAW,IAAIiB,qBAAqBf,EAAiB,CACnDgB,KAAMV,IA3BM,cA4BZW,WAzBsC,OA0BtCC,UAzBoC,KA4B/BX,IAGF,SAASY,IACd,OAAOT,IAAaU,MAAK,kBAAOtB,EAAW,QAGtC,SAASuB,IACd,OAAOX,IAAaU,KAAKb","file":"component---src-pages-index-js-25600f6453a66c20ccd8.js","sourcesContent":["import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport Image from 'gatsby-image'\n\nimport './index.scss'\n\nexport const LandingBio = () => (\n  <StaticQuery\n    query={landingBioQuery}\n    render={data => {\n      const { title, author, social, introduction } = data.site.siteMetadata\n      const { fixed: profileImg } = data.profileImg.childImageSharp\n\n      return (\n        <div className=\"landingBio\">\n          <div className=\"landingBio-wrapper\">\n            <Link to=\"/about\">\n              <Image\n                className=\"author-image\"\n                fixed={profileImg}\n                alt={author}\n                imgStyle={{\n                  borderRadius: `50%`,\n                }}\n              />\n            </Link>\n            <h1 className=\"nameHeader\">{title}</h1>\n            <p className=\"introduction\">{introduction}</p>\n            {/* <p className=\"author-socials\">\n              {social.github && (\n                <a href={`https://github.com/${social.github}`}>GitHub</a>\n              )}\n              {social.medium && (\n                <a href={`https://medium.com/${social.medium}`}>Medium</a>\n              )}\n              {social.facebook && (\n                <a href={`https://www.facebook.com/${social.facebook}`}>\n                  Facebook\n                </a>\n              )}\n              {social.linkedin && (\n                <a href={`https://www.linkedin.com/in/${social.linkedin}/`}>\n                  LinkedIn\n                </a>\n              )}\n            </p> */}\n          </div>\n        </div>\n      )\n    }}\n  />\n)\n\nconst landingBioQuery = graphql`\n  query landingBioQuery {\n    profileImg: file(absolutePath: { regex: \"/profile.png/\" }) {\n      childImageSharp {\n        fixed(width: 125, height: 125) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        author\n        introduction\n        social {\n          github\n          medium\n          facebook\n          linkedin\n        }\n      }\n    }\n  }\n`\n\nexport default LandingBio\n","import React from 'react'\n\nimport { Layout } from '../layout'\nimport { SEO } from '../components/seo'\nimport LandingBio from '../components/landing-bio'\nimport { HOME_TITLE } from '../constants/meta'\nimport { useIntersectionObserver } from '../hooks/useIntersectionObserver'\n\nconst IndexPage = ({ data, location }) => {\n  const { siteMetadata } = data.site\n\n  useIntersectionObserver()\n\n  return (\n    <Layout location={location} title={siteMetadata.title}>\n      <SEO title={HOME_TITLE} keywords={siteMetadata.keywords} />\n      <LandingBio />\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const indexQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        keywords\n      }\n    }\n  }\n`\n","import { useEffect } from 'react'\nimport * as IOManager from '../utils/visible'\n\nexport function useIntersectionObserver() {\n  useEffect(() => {\n    IOManager.init()\n    return () => {\n      IOManager.destroy()\n    }\n  }, [])\n\n  useEffect(() => {\n    IOManager.refreshObserver()\n  })\n}\n","import * as Dom from './dom'\n\nconst ROOT_ID = '#___gatsby'\nexport const TARGET_CLASS = 'observed'\nconst VISIBLE_RECOGNIZE_CLASS = 'visible'\nconst INTERSECTION_OBSERVER_ROOT_MARGIN = '20px'\nconst INTERSECTION_OBSERVER_THRESHOLD = 0.8\n\nlet observer\n\nfunction observeCallback(entries) {\n  return entries\n    .filter(({ isIntersecting }) => isIntersecting)\n    .forEach(({ target }) => Dom.addClass(target, VISIBLE_RECOGNIZE_CLASS))\n}\n\nfunction observerTargeting() {\n  return Dom.getElements(`.${TARGET_CLASS}`).forEach(el => observer.observe(el))\n}\n\nfunction disconnect() {\n  if (!observer) {\n    throw Error('Not found IntersectionObserver instance')\n  }\n  return Promise.resolve(observer.disconnect())\n}\n\nexport function init() {\n  observer = new IntersectionObserver(observeCallback, {\n    root: Dom.getElement(ROOT_ID),\n    rootMargin: INTERSECTION_OBSERVER_ROOT_MARGIN,\n    threshold: INTERSECTION_OBSERVER_THRESHOLD,\n  })\n\n  return observerTargeting()\n}\n\nexport function destroy() {\n  return disconnect().then(() => (observer = null))\n}\n\nexport function refreshObserver() {\n  return disconnect().then(observerTargeting)\n}\n"],"sourceRoot":""}